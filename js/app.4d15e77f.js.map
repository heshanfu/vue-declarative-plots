{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/plots/StackedBarPlot.vue?a1bb","webpack:///./src/components/PlotContainer.vue?9610","webpack:///./src/components/Axis.vue?bc0b","webpack:///./src/components/plots/TrackPlot.vue?a25f","webpack:///./src/components/plots/MultiBoxPlot.vue?ca63","webpack:///./src/components/plots/BarPlot.vue?5621","webpack:///./src/components/plots/ScatterPlot.vue?a29b","webpack:///./src/components/SortOptions.vue?9c17","webpack:///./src/components/plots/BoxPlot.vue?0a78","webpack:///./src/components/GenomeAxis.vue?6f3b","webpack:///./examples-src/App.vue?7c5f","webpack:///./src/components/PlotContainer.vue?0abb","webpack:///./examples-src/App.vue?4636","webpack:///src/components/PlotContainer.vue","webpack:///./src/components/PlotContainer.vue?5981","webpack:///./src/components/Axis.vue?0e8a","webpack:///./src/scales/AbstractScale.js","webpack:///./src/history/HistoryEvent.js","webpack:///src/components/Axis.vue","webpack:///./src/components/Axis.vue?43d3","webpack:///./src/components/Axis.vue","webpack:///./src/components/GenomeAxis.vue?31a1","webpack:///./src/scales/GenomeScale.js","webpack:///src/components/GenomeAxis.vue","webpack:///./src/components/GenomeAxis.vue?4076","webpack:///./src/components/GenomeAxis.vue?4081","webpack:///./src/components/DendrogramAxis.vue?74d1","webpack:///./src/data/DataContainer.js","webpack:///src/components/DendrogramAxis.vue","webpack:///./src/components/DendrogramAxis.vue?7293","webpack:///./src/components/DendrogramAxis.vue","webpack:///./src/components/plots/StackedBarPlot.vue?19c7","webpack:///./src/constants.js","webpack:///./src/helpers.js","webpack:///./src/components/plots/mixin.js","webpack:///src/components/plots/StackedBarPlot.vue","webpack:///./src/components/plots/StackedBarPlot.vue?7de4","webpack:///./src/components/plots/StackedBarPlot.vue","webpack:///./src/components/plots/BarPlot.vue?9fd9","webpack:///src/components/plots/BarPlot.vue","webpack:///./src/components/plots/BarPlot.vue?9ad2","webpack:///./src/components/plots/BarPlot.vue","webpack:///./src/components/plots/ScatterPlot.vue?6feb","webpack:///src/components/plots/ScatterPlot.vue","webpack:///./src/components/plots/ScatterPlot.vue?7e4b","webpack:///./src/components/plots/ScatterPlot.vue","webpack:///./src/components/plots/BoxPlot.vue?a94e","webpack:///src/components/plots/BoxPlot.vue","webpack:///./src/components/plots/BoxPlot.vue?e485","webpack:///./src/components/plots/BoxPlot.vue","webpack:///./src/components/plots/MultiBoxPlot.vue?7edb","webpack:///src/components/plots/MultiBoxPlot.vue","webpack:///./src/components/plots/MultiBoxPlot.vue?7cd0","webpack:///./src/components/plots/MultiBoxPlot.vue","webpack:///./src/components/plots/TrackPlot.vue?1c3c","webpack:///src/components/plots/TrackPlot.vue","webpack:///./src/components/plots/TrackPlot.vue?5c72","webpack:///./src/components/plots/TrackPlot.vue","webpack:///./src/components/plots/GenomeScatterPlot.vue?185e","webpack:///src/components/plots/GenomeScatterPlot.vue","webpack:///./src/components/plots/GenomeScatterPlot.vue?3c63","webpack:///./src/components/plots/GenomeScatterPlot.vue","webpack:///./src/index.js","webpack:///./src/scales/CategoricalScale.js","webpack:///./src/scales/ContinuousScale.js","webpack:///./src/components/SortOptions.vue?60e4","webpack:///./src/sort/SortBy.js","webpack:///src/components/SortOptions.vue","webpack:///./src/components/SortOptions.vue?e574","webpack:///./src/components/SortOptions.vue","webpack:///./examples-src/Stack.vue?dacc","webpack:///examples-src/Stack.vue","webpack:///./examples-src/Stack.vue?5eb0","webpack:///./examples-src/Stack.vue?7b66","webpack:///./src/history/HistoryStack.js","webpack:///examples-src/App.vue","webpack:///./examples-src/App.vue?03c9","webpack:///./examples-src/App.vue?999d","webpack:///./examples-src/index.js","webpack:///./src/components/DendrogramAxis.vue?02f9","webpack:///./src/components/plots/GenomeScatterPlot.vue?586f","webpack:///./examples-src/Stack.vue?2243"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StackedBarPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StackedBarPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PlotContainer_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PlotContainer_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Axis_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Axis_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TrackPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TrackPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MultiBoxPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MultiBoxPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BarPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BarPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ScatterPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ScatterPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SortOptions_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SortOptions_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BoxPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BoxPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GenomeAxis_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GenomeAxis_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","PlotContainer_render","PlotContainer_staticRenderFns","Appvue_type_template_id_59520b02_render","_vm","this","_h","$createElement","_c","_self","attrs","id","_v","href","title","xmlns","width","height","viewBox","fill-rule","style","display","on","click","$event","showStack","pWidth","pHeight","pMarginTop","pMarginLeft","pMarginRight","pMarginBottom","slot","variable","side","tickRotation","getScale","getStack","x","y","getData","clickHandler","exampleClickHandler","disableBrushing","drawOutliers","scaleKey","g","chromosomeVariable","positionVariable","by","sampleSortBy","directives","rawName","expression","staticClass","staticRenderFns","addProp","slotArray","newProps","map","vnode","componentOptions","propsData","newNode","_arr","keys","_i","propName","PlotContainervue_type_script_lang_js_","props","type","Number","render","h","$slots","axisTop","$props","axisLeft","plot","axisRight","axisBottom","children","concat","classes","styles","class","components_PlotContainervue_type_script_lang_js_","component","componentNormalizer","options","__file","PlotContainer","Axisvue_type_template_id_7b3d5b3f_render","computedHeight","computedWidth","top","computedTop","left","computedLeft","axisElemID","Axisvue_type_template_id_7b3d5b3f_staticRenderFns","DISPATCH_EVENT_UPDATE","DISPATCH_EVENT_HIGHLIGHT","DISPATCH_EVENT_HIGHLIGHT_DESTROY","AbstractScale","domain","classCallCheck","_id","_name","_domain","_domainFiltered","_dispatch","d3_dispatch","domainValue","Error","a","b","isUnknown","unknownString","componentId","callback","newDomain","newDomainFiltered","setDomainFiltered","emitUpdate","d3_interpolateRdYlBu","undefined","freeze","DISCRETE","CONTINUOUS","HistoryEvent","action","params","_type","_action","_params","event","SCALE","SIDES","TOP","LEFT","RIGHT","BOTTOM","ORIENTATIONS","VERTICAL","HORIZONTAL","uuid","Axisvue_type_script_lang_js_","String","default","Function","Boolean","computed","axisSelector","_side","computedTranslateX","computedTranslateY","watch","drawAxis","beforeCreate","$options","toString","created","sideString","toUpperCase","console","assert","includes","_orientation","_varScale","AbstractScale_AbstractScale","onUpdate","_stack","mounted","methods","removeAxis","d3_selection_src","select","remove","vm","range","axisFunction","scaleZoomedOut","scaleZoomedIn","tickSizeOuter","varScale","stack","d3_axis_src","types","d3_scale_src","domainFiltered","container","append","attr","containerZoomedIn","ticksZoomedIn","textBboxZoomedIn","node","getBBox","tickTransformFunction","v","tickBbox","tickRotateX","tickRotateY","selectAll","axisBboxZoomedIn","barWidth","axisBboxZoomedOut","betweenAxisMargin","zoomedOutTranslateX","zoomedOutTranslateY","zoomRectTranslateX","axisContainerSize","brush","brushed","brushExtent","containerZoomedOut","ticksZoomedOut","textBboxZoomedOut","_barWidth","start","end","zoomRectTranslateY","eachBand","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","domainFilteredItem","err","return","_start","_end","d3","selection","reverse","s2","invert","zoom","HistoryEvent_HistoryEvent","startIndex","Math","floor","endIndex","ceil","d3_brush_src","extent","_brushExtent","labelX","labelY","labelRotate","containerLabel","labelText","text","labelTextBbox","downloadAxis","saveSvgAsPng","components_Axisvue_type_script_lang_js_","Axis_component","Axis","GenomeAxisvue_type_template_id_34a52e90_render","change","onChromosomeChange","domProps","selected","isWholeGenome","_l","chromosomeName","selectedChromosome","_s","selectedChromosomeStart","toLocaleString","onChromosomeStartChange","selectedChromosomeEnd","onChromosomeEndChange","onChromosomeShiftLeft","onChromosomeShiftRight","onChromosomeZoomIn","onChromosomeZoomOut","_e","GenomeAxisvue_type_template_id_34a52e90_staticRenderFns","CHROMOSOMES","CHROMOSOME_LENGTHS","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M","GenomeScale","_chromosomes","_chromosomesFiltered","_domains","el","_domainsFiltered","chromosome","indexOf","cumsum","reduce","ratios","getChromosomeRatios","ratiosCumulative","curr","ratio","getChromosomeRatiosFiltered","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","position","_this","genomeLength","d3_sum","chromosomeIndex","currChromosomeIndex","currChromosomeDomain","_this2","GenomeAxisvue_type_script_lang_js_SIDES","GenomeAxisvue_type_script_lang_js_ORIENTATIONS","GenomeAxisvue_type_script_lang_js_uuid","GenomeAxisvue_type_script_lang_js_","isSingleChromosome","allChromosomes","chromosomes","GenomeScale_GenomeScale","e","target","filterByChromosome","reset","val","parseInt","replace","chromosomeDomain","getDomain","filterByChromosomeAndPosition","chromosomeDomainFiltered","getDomainFiltered","chromosomeRangeFiltered","newStart","max","newEnd","min","offset","chromosomesFiltered","chromosomeRatiosCumulativeFiltered","getChromosomeRatiosCumulativeFiltered","chromosomeRatioZipFiltered","d3_array_src","zipToMap","zip","obj","forEach","chromosomeRatioMapFiltered","tickValues","tickFormat","_chromosomeDomain","scaleChromosome","containerChromosome","components_GenomeAxisvue_type_script_lang_js_","GenomeAxis_component","GenomeAxis","DendrogramAxisvue_type_template_id_444f70e5_render","DendrogramAxisvue_type_template_id_444f70e5_staticRenderFns","DataContainer","_data","Array","from","DendrogramAxisvue_type_script_lang_js_SIDES","DendrogramAxisvue_type_script_lang_js_ORIENTATIONS","DendrogramAxisvue_type_script_lang_js_uuid","DendrogramAxisvue_type_script_lang_js_","DataContainer_DataContainer","size","dataCopy","tree","d3_hierarchy_src","separation","root","descendants","filter","gTree","enter","parent","components_DendrogramAxisvue_type_script_lang_js_","DendrogramAxis_component","DendrogramAxis","StackedBarPlotvue_type_template_id_50bbb9ef_render","plotElemID","hiddenPlotElemID","showHighlight","highlightX1","highlightX2","tooltipElemID","_xScale","tooltipInfo","_cScale","_yScale","StackedBarPlotvue_type_template_id_50bbb9ef_staticRenderFns","TOOLTIP_DEBOUNCE","getRetinaRatio","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","mixin","tooltipPosition","highlightElemID","plotSelector","hiddenPlotSelector","highlightSelector","tooltipSelector","tooltipPositionAttribute","drawPlot","tooltipHide","tooltipDestroy","removePlot","downloadPlot","image","document","getElementById","toDataURL","write","StackedBarPlotvue_type_script_lang_js_uuid","StackedBarPlotvue_type_script_lang_js_","mixins","highlightScale","_dataContainer","onHighlight","highlight","onHighlightDestroy","highlightDestroy","tooltip","mouseX","mouseY","toHuman","emitHighlight","emitHighlightDestroy","xScale","yScale","cScale","d3_shape_src","order","series","canvas","context","getContext","canvasHidden","contextHidden","scaledWidth","scaledHeight","scale","colToNode","nextCol","genColor","ret","col","join","layer","fillStyle","color","fillRect","canvasNode","getDataFromMouse","getImageData","colString","debouncedTooltipDestroy","debounce_default","mouse","plots_StackedBarPlotvue_type_script_lang_js_","StackedBarPlot_component","StackedBarPlot","BarPlotvue_type_template_id_466fc126_render","BarPlotvue_type_template_id_466fc126_staticRenderFns","BarPlotvue_type_script_lang_js_uuid","BarPlotvue_type_script_lang_js_","plots_BarPlotvue_type_script_lang_js_","BarPlot_component","BarPlot","ScatterPlotvue_type_template_id_24299146_render","border-radius","highlightY1","ScatterPlotvue_type_template_id_24299146_staticRenderFns","ScatterPlotvue_type_script_lang_js_uuid","ScatterPlotvue_type_script_lang_js_","highlightXScale","highlightYScale","highlightX","highlightY","strokeStyle","beginPath","arc","PI","stroke","points","delaunay","d3_delaunay_src","find","plots_ScatterPlotvue_type_script_lang_js_","ScatterPlot_component","ScatterPlot","BoxPlotvue_type_template_id_e91efe88_render","q1","median","mean","q3","BoxPlotvue_type_template_id_e91efe88_staticRenderFns","BoxPlotvue_type_script_lang_js_uuid","BoxPlotvue_type_script_lang_js_","pointSize","boxWidth","boxMargin","diamondSize","boxData","quantile","quartiles","quantiles","iqr","lowerFence","upperFence","boxX1","boxX2","boxX","moveTo","lineTo","strokeRect","outliers","outlier","plots_BoxPlotvue_type_script_lang_js_","BoxPlot_component","BoxPlot","MultiBoxPlotvue_type_template_id_6e317ab7_render","MultiBoxPlotvue_type_template_id_6e317ab7_staticRenderFns","MultiBoxPlotvue_type_script_lang_js_uuid","MultiBoxPlotvue_type_script_lang_js_","boxVar","plots_MultiBoxPlotvue_type_script_lang_js_","MultiBoxPlot_component","MultiBoxPlot","TrackPlotvue_type_template_id_eccfcb00_render","TrackPlotvue_type_template_id_eccfcb00_staticRenderFns","TrackPlotvue_type_script_lang_js_uuid","TrackPlotvue_type_script_lang_js_","plots_TrackPlotvue_type_script_lang_js_","TrackPlot_component","TrackPlot","GenomeScatterPlotvue_type_template_id_0a647521_render","GenomeScatterPlotvue_type_template_id_0a647521_staticRenderFns","GenomeScatterPlotvue_type_script_lang_js_uuid","GenomeScatterPlotvue_type_script_lang_js_","highlightGScales","_gScale","highlightG","gScale","domains","getDomainsFiltered","chromosomeRatios","chromosomeRatiosCumulative","currChromosome","currDomain","currRatio","currRatioCumulative","fill","plots_GenomeScatterPlotvue_type_script_lang_js_","GenomeScatterPlot_component","GenomeScatterPlot","Vue","CategoricalScale","humanDomain","possibleConstructorReturn","getPrototypeOf","isArray","_humanDomain","humanScale","unknownColor","colorScale","findIndex","parseFloat","d3_descending","newMinIndex","newMaxIndex","elementsFiltered","indicesToKeep","index","dataContainer","var1D","comparator","_this3","ascending","arguments","compareFunc","d3_ascending","sort","elementsSorted","setDomain","elementsSortedFiltered","d3_scaleOrdinal","ContinuousScale","newMin","newMax","d3_interpolateYlOrRd","SortOptionsvue_type_template_id_17377c1a_render","$$selectedVal","_value","selectedKey","multiple","disabled","sortVarKey","validSelection","sortAscending","SortOptionsvue_type_template_id_17377c1a_staticRenderFns","SortBy","variables","_variables","SortOptionsvue_type_script_lang_js_","go","SortBy_SortBy","varValue","components_SortOptionsvue_type_script_lang_js_","SortOptions_component","SortOptions","Stackvue_type_template_id_6da5bdb9_render","canGoBack","goBack","canGoForward","goForward","isCurrent","toJson","Stackvue_type_template_id_6da5bdb9_staticRenderFns","Stackvue_type_script_lang_js_","elements","elementsReversed","_pointer","examples_src_Stackvue_type_script_lang_js_","Stack_component","Stack","HistoryStack","_getScale","_initial","initial","prune","incrementPointer","decrementPointer","pop","pointer","isRelated","prev","getPrevRelated","execute","isEmpty","getTargetFunc","toConsumableArray","error","exposuresDataContainer","exposures","exposuresSingleDataContainer","exposures_single","rainfallDataContainer","rainfall","xyDataContainer","xy","boxplotDataContainer","boxplot_data","clinicalDataContainer","clinical_data","clusteringDataContainer","clustering","dataKey","sampleIdScale","CategoricalScale_CategoricalScale","src","sample_id","values","exposureScale","ContinuousScale_ContinuousScale","signatureScale","xyYScale","xyXScale","ageScale","genomeScale","SBS_96_CATEGORIES","catScale","mutDistScale","Appvue_type_script_lang_js_getScale","Appvue_type_script_lang_js_stack","HistoryStack_HistoryStack","Appvue_type_script_lang_js_","components","alert","JSON","stringify","examples_src_Appvue_type_script_lang_js_","App_component","App","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DendrogramAxis_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DendrogramAxis_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GenomeScatterPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GenomeScatterPlot_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Stack_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Stack_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.4d15e77f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-declarative-plots/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"cff0\",\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StackedBarPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StackedBarPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlotContainer.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlotContainer.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axis.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axis.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrackPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrackPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiBoxPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiBoxPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SortOptions.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SortOptions.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoxPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoxPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeAxis.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeAxis.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render, staticRenderFns\nimport script from \"./PlotContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./PlotContainer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PlotContainer.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"PlotContainer.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"vue-declarative-plots\")]),_c('a',{attrs:{\"href\":\"https://github.com/keller-mark/vue-declarative-plots\",\"title\":\"View on GitHub\"}},[_c('svg',{attrs:{\"id\":\"github\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"40\",\"height\":\"40\",\"viewBox\":\"0 0 16 16\"}},[_c('path',{attrs:{\"fill-rule\":\"evenodd\",\"d\":\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"}})])]),_c('button',{style:({display: 'block'}),on:{\"click\":function($event){_vm.showStack = !_vm.showStack}}},[_vm._v(\"Toggle Stack\")]),_c('h3',[_vm._v(\"<StackedBarPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":800,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":150}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('StackedBarPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"x\":\"sample_id\",\"y\":\"exposure\",\"c\":\"signature\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sample_id\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<BarPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":150}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('BarPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_single_data\",\"x\":\"signature\",\"y\":\"exposure\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"signature\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"disableBrushing\":true},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<ScatterPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":150}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"y\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('ScatterPlot',{attrs:{\"slot\":\"plot\",\"data\":\"xy_data\",\"x\":\"x\",\"y\":\"y\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"x\",\"side\":\"bottom\",\"tickRotation\":0,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<BoxPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":200,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('BoxPlot',{attrs:{\"slot\":\"plot\",\"data\":\"boxplot_data\",\"y\":\"exposure\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"drawOutliers\":true},slot:\"plot\"})],1),_c('h3',[_vm._v(\"<MultiBoxPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('MultiBoxPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"x\":\"signature\",\"y\":\"exposure\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"drawOutliers\":true},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"signature\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<TrackPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":40,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180}},[_c('TrackPlot',{attrs:{\"slot\":\"plot\",\"data\":\"clinical_data\",\"x\":\"sample_id\",\"c\":\"age\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sample_id\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<GenomeAxis/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":800,\"pHeight\":10,\"pMarginTop\":10,\"pMarginLeft\":20,\"pMarginRight\":20,\"pMarginBottom\":80}},[_c('GenomeAxis',{attrs:{\"slot\":\"axisBottom\",\"scaleKey\":\"genome\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<GenomeScatterPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":800,\"pHeight\":500,\"pMarginTop\":20,\"pMarginLeft\":150,\"pMarginRight\":20,\"pMarginBottom\":80}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"mut_dist\",\"side\":\"left\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('GenomeScatterPlot',{attrs:{\"slot\":\"plot\",\"data\":\"rainfall_data\",\"g\":\"genome\",\"chromosomeVariable\":\"chr\",\"positionVariable\":\"pos\",\"c\":\"cat\",\"y\":\"mut_dist\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('GenomeAxis',{attrs:{\"slot\":\"axisBottom\",\"scaleKey\":\"genome\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<DendrogramAxis/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":900,\"pHeight\":10,\"pMarginTop\":200,\"pMarginLeft\":20,\"pMarginRight\":20,\"pMarginBottom\":20}},[_c('DendrogramAxis',{attrs:{\"slot\":\"axisTop\",\"data\":\"clustering\",\"variable\":\"sample_id\",\"side\":\"top\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"getData\":_vm.getData},slot:\"axisTop\"})],1),_c('h3',[_vm._v(\"<SortOptions/>\")]),_c('SortOptions',{attrs:{\"variable\":\"sample_id\",\"by\":_vm.sampleSortBy,\"getScale\":_vm.getScale,\"getData\":_vm.getData}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showStack),expression:\"showStack\"}],staticClass:\"stack-wrapper\"},[_c('h3',[_vm._v(\"<Stack/>\")]),_c('Stack',{attrs:{\"getStack\":_vm.getStack}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\n/**\n * Function that takes in array of VNodes and adds props from a provided props object.\n * @private\n * @param {array} slotArray Array of named slot VNodes.\n * @param {object} newProps Object mapping prop keys to values.\n * @return {array} The updated array of VNode with the added props.\n */\nconst addProp = function(slotArray, newProps) {\n    if (slotArray) {\n        slotArray = slotArray.map((vnode) => {\n            if (vnode.componentOptions && vnode.componentOptions.propsData) {\n                const newNode = vnode;\n                for(let propName of Object.keys(newProps)) {\n                    newNode.componentOptions.propsData[propName] = newProps[propName];\n                }\n                return newNode;\n            }\n            return vnode;\n        });\n        return slotArray\n    }\n    return [];\n}\n/**\n * This component is a container for axis and plot components, \n * which passes its props to its children and imposes styles.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * \n * @example\n * <PlotContainer\n *    :pWidth=\"500\"\n *    :pHeight=\"300\"\n *    :pMarginTop=\"10\"\n *    :pMarginLeft=\"120\"\n *    :pMarginRight=\"10\"\n *    :pMarginBottom=\"150\"\n *  >\n *    <Axis\n *      slot=\"axisLeft\" <!-- note the slot prop -->\n *      variable=\"exposure\"\n *      side=\"left\" \n *      :tickRotation=\"-35\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *      <!-- note the axis props that are omitted because they are being inherited -->\n *    />\n *    <BarPlot\n *      slot=\"plot\" <!-- note the slot prop -->\n *      data=\"exposures_single_data\"\n *      x=\"signature\" \n *      y=\"exposure\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      <!-- note the plot props that are omitted because they are being inherited -->\n *    />\n *    <Axis\n *      slot=\"axisBottom\" <!-- note the slot prop -->\n *      variable=\"signature\"\n *      side=\"bottom\" \n *      :tickRotation=\"-65\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *      :disableBrushing=\"true\"\n *      <!-- note the axis props that are omitted because they are being inherited -->\n *    />\n *  </PlotContainer>\n */\nexport default {\n    name: 'PlotContainer',\n    props: {\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        }\n    },\n    render(h) {\n        this.$slots.axisTop = addProp(this.$slots.axisTop, this.$props);\n        this.$slots.axisLeft = addProp(this.$slots.axisLeft, this.$props);\n        this.$slots.plot = addProp(this.$slots.plot, this.$props);\n        this.$slots.axisRight = addProp(this.$slots.axisRight, this.$props);\n        this.$slots.axisBottom = addProp(this.$slots.axisBottom, this.$props);\n        \n        let children = ([]).concat(\n            this.$slots.axisTop, \n            this.$slots.axisLeft,\n            this.$slots.plot,\n            this.$slots.axisRight,\n            this.$slots.axisBottom\n        );\n        let classes = ['vdp-plot-container'];\n        let styles = {\n            width: (this.pMarginLeft + this.pWidth + this.pMarginRight) + 'px',\n            height: (this.pMarginTop + this.pHeight + this.pMarginBottom) + 'px'\n        };\n        return h('div', { class: classes, style: styles }, children);\n    }\n}\n</script>\n\n<style>\n.vdp-plot-container {\n    position: relative;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlotContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlotContainer.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vdp-axis\",style:({\n        'height': this.computedHeight + 'px', \n        'width': this.computedWidth + 'px',\n        'top': this.computedTop + 'px',\n        'left': this.computedLeft + 'px'\n    }),attrs:{\"id\":this.axisElemID}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { interpolateRdYlBu as d3_interpolateRdYlBu } from \"d3-scale-chromatic\";\nimport { dispatch as d3_dispatch } from \"d3-dispatch\";\n\nconst DISPATCH_EVENT_UPDATE = \"update\";\nconst DISPATCH_EVENT_HIGHLIGHT = \"highlight\";\nconst DISPATCH_EVENT_HIGHLIGHT_DESTROY = \"highlight-destroy\";\n\n\n/**\n * Abstract class representing a scale.\n * @interface\n */\nexport default class AbstractScale {\n\n    /**\n     * @enum\n     * @readonly\n     */\n    static types = Object.freeze({ DISCRETE: 1, CONTINUOUS: 2 });\n    static unknownColor = \"#E3E3E3\";\n    static unknownString = \"Unknown\";\n\n    /**\n     * Create a scale.\n     * @param {*} id The ID for the scale.\n     * @param {*} name The name for the scale.\n     * @param {*} domain The domain for the scale.\n     */\n    constructor(id, name, domain) {\n        this._id = id;\n        this._name = name;\n        this._domain = domain;\n        this._domainFiltered = domain.slice();\n        this._dispatch = d3_dispatch(\n            DISPATCH_EVENT_UPDATE, \n            DISPATCH_EVENT_HIGHLIGHT, \n            DISPATCH_EVENT_HIGHLIGHT_DESTROY\n        );\n    }\n    \n    /**\n     * @returns {string} The ID for the scale.\n     */\n    get id() {\n        return this._id;\n    }\n    \n    /**\n     * @returns {string} The name for the scale.\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * @returns {enum} An integer representing the scale type (discrete, continuous)\n     */\n    get type() {\n        throw new Error('You have to implement the getter type!');\n    }\n\n    /**\n     * @returns {array} The values that variables using this scale can take.\n     */\n    get domain() {\n        return this._domain;\n    }\n\n    /**\n     * @returns {array} The values that variables using this scale can take after filtering.\n     */\n    get domainFiltered() {\n        return this._domainFiltered;\n    }\n\n    /**\n     * @returns {function} Function that converts a value between [0, 1] to a color\n     */\n    get colorScale() {\n        return d3_interpolateRdYlBu;\n    }\n\n    /**\n     * Converts a domain value to a color\n     * @param {*} domainValue A domain value\n     * @returns {color} A color value\n     * \n     */\n    color(domainValue) {\n        throw new Error('You have to implement the method color!');\n    }\n\n    /**\n     * Compares two domain values\n     * @param {*} a A domain value\n     * @param {*} b Another domain value\n     * @returns {number} Comparison result of -1, 0, or 1.\n     */\n    comparator(a, b) {\n        throw new Error('You have to implement the method comparator!');\n    }\n\n    /**\n     * Check whether a domain value should be considered unknown\n     * @param {*} domainValue A domain value\n     * @returns {boolean} True if the domain value should be considered unknown\n     */\n    static isUnknown(domainValue) {\n        return (domainValue == \"nan\" || domainValue === undefined);\n    }\n\n    /**\n     * Convert a domain value to a human-readable value.\n     * @param {*} domainValue A domain value\n     * @returns {*} The corresponding humanDomain value\n     */\n    toHuman(domainValue) {\n        if(AbstractScale.isUnknown(domainValue)) {\n            return AbstractScale.unknownString;\n        }\n        // The default implementation does nothing except the unknown check\n        return domainValue;\n    }\n\n    /**\n     * Subscribe to update events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onUpdate(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_UPDATE + \".\" + componentId, callback);\n    }\n\n    /**\n     * Subscribe to highlight events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onHighlight(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_HIGHLIGHT + \".\" + componentId, callback);\n    }\n\n    /**\n     * Subscribe to highlight destroy events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onHighlightDestroy(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_HIGHLIGHT_DESTROY + \".\" + componentId, callback);\n    }\n\n    /**\n     * Emit the update event.\n     */\n    emitUpdate() {\n        this._dispatch.call(DISPATCH_EVENT_UPDATE);\n    }\n\n    /**\n     * Emit the highlight event.\n     */\n    emitHighlight(domainValue) {\n        this._dispatch.call(DISPATCH_EVENT_HIGHLIGHT, null, domainValue);\n    }\n\n    /**\n     * Emit the highlight destroy event.\n     */\n    emitHighlightDestroy() {\n        this._dispatch.call(DISPATCH_EVENT_HIGHLIGHT_DESTROY);\n    }\n\n    /**\n     * Set the domain directly.\n     * @param {array} newDomain An array of new domain values.\n     */\n    setDomain(newDomain) {\n        this._domain = newDomain;\n    }\n\n    /**\n     * Set the filtered domain directly.\n     * @param {array} newDomainFiltered An array of new filtered domain values.\n     */\n    setDomainFiltered(newDomainFiltered) {\n        this._domainFiltered = newDomainFiltered;\n    }\n\n    /**\n     * Resets the filtered domain, using the full original domain.\n     */\n    reset() {\n        this.setDomainFiltered(this._domain.slice());\n        this.emitUpdate();\n    }\n}","/**\n * Represents a single event in the application's history.\n * Given an event type, ID, action, and parameters,\n * the event will be able to be executed in the following way:\n * - the history stack will use the type (e.g. SCALE) to identify a function that it knows about (e.g. getScale)\n * - the event-type-specific function will be called using the provided ID (e.g. getScale(ID) ), which will return an object\n * - the function specified by `action` will be invoked on the returned object, using the array of params as parameters\n */\nexport default class HistoryEvent {\n\n    /**\n     * Enum of the available event types.\n     */\n    static types = Object.freeze({ SCALE: 1 });\n\n    /**\n     * \n     * @param {number} type Event type, such as SCALE, etc...\n     * @param {string} id Event identifier, used for history\n     * @param {string} action Method to call on the object.\n     * @param {array} params Parameters with which to call the method.\n     */\n    constructor(type, id, action, params) {\n        this._type = type;\n        this._id = id;\n        this._action = action;\n        this._params = params || [];\n    }\n\n    /**\n     * @returns {number} The event type.\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * @returns {string} The event identifier.\n     */\n    get id() { \n        return this._id;\n    }\n\n    /**\n     * @returns {string} The name of the method to call on the target object.\n     */\n    get action() {\n        return this._action;\n    }\n\n    /**\n     * @returns {array} The params to pass to the method specified by `action`.\n     */\n    get params() {\n        return this._params;\n    }\n\n    /**\n     * \n     * @param {HistoryEvent} event Another history event.\n     * @returns {boolean} Whether the other history event is related to this.\n     */\n    isRelated(event) {\n        return (event._type === this._type && event._id === this._id);\n    } \n\n    /**\n     * @returns {object} JSON representation of the event.\n     */\n    toJson() {\n        return {\n            \"type\": this._type,\n            \"id\": this._id,\n            \"action\": this._action,\n            \"params\": this._params\n        }\n    }\n}","<template>\n    <div \n        :id=\"this.axisElemID\" \n        class=\"vdp-axis\" \n        :style=\"{\n            'height': this.computedHeight + 'px', \n            'width': this.computedWidth + 'px',\n            'top': this.computedTop + 'px',\n            'left': this.computedLeft + 'px'\n        }\"></div>\n</template>\n\n<script>\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { axisTop as d3_axisTop, axisLeft as d3_axisLeft, axisRight as d3_axisRight, axisBottom as d3_axisBottom } from 'd3-axis';\nimport { brushX as d3_brushX, brushY as d3_brushY } from 'd3-brush';\nimport { event as d3_event } from 'd3';\n\nimport { saveSvgAsPng } from 'save-svg-as-png';\n\nimport AbstractScale from './../scales/AbstractScale.js';\nimport HistoryEvent from './../history/HistoryEvent.js';\n\nconst SIDES = Object.freeze({ \"TOP\": 1, \"LEFT\": 2, \"RIGHT\": 3, \"BOTTOM\": 4 });\nconst ORIENTATIONS = Object.freeze({ \"VERTICAL\": 1, \"HORIZONTAL\": 2 }); // vertical = left/right, horizontal = top/bottom\n\nlet uuid = 0;\n/**\n * @prop {string} variable The axis variable key.\n * @prop {string} side The side for the scale.\n * @prop {number} tickRotation An angle used to rotate axis tick text.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} getStack Function that returns a HistoryStack instance.\n * @prop {boolean} disableBrushing Whether to disable brushing functionality and hide the zoomed-out \"context\" view.\n * \n * @example\n * <Axis\n *      variable=\"y\"\n *      side=\"left\" \n *      :tickRotation=\"-35\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'Axis',\n    props: {\n        'variable': {\n            type: String\n        },\n        'side': {\n            type: String\n        },\n        'tickRotation': {\n            type: Number,\n            default: 0\n        },\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        },\n        'disableBrushing': {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            \n        }\n    },\n    computed: {\n        axisElemID: function() {\n            return 'axis_' + this.uuid;\n        },\n        axisSelector: function() {\n            return \"#\" + this.axisElemID;\n        },\n        computedWidth: function() {\n            if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft + this.pWidth + this.pMarginRight;\n            } else if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginRight;\n            }\n        },\n        computedHeight: function() {\n            if(this._side === SIDES.LEFT || this._side === SIDES.RIGHT) {\n                return this.pMarginTop + this.pHeight + this.pMarginBottom;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.BOTTOM) {\n                return this.pMarginBottom;\n            }\n        },\n        computedTop: function() {\n            if(this._side === SIDES.BOTTOM) {\n                return this.pMarginTop + this.pHeight;\n            }\n            return 0;\n        },\n        computedLeft: function() {\n            if(this._side === SIDES.RIGHT) {\n                return this.pMarginLeft + this.pWidth;\n            }\n            return 0;\n        },\n        computedTranslateX: function() {\n            if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft - 1;\n            } else if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft;\n            }\n            return 0;\n        },\n        computedTranslateY: function() {\n            if(this._side === SIDES.LEFT) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop - 1;\n            }\n            return 0;\n        }\n    },\n    watch: {\n        pWidth: function () {\n            this.drawAxis();\n        },\n        pHeight: function () {\n            this.drawAxis();\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set side and orientation enum values from side prop\n        let sideString = this.side.toUpperCase();\n        console.assert(Object.keys(SIDES).includes(sideString));\n        this._side = SIDES[sideString];\n        this._orientation = (this._side === SIDES.TOP || this._side === SIDES.BOTTOM ? ORIENTATIONS.HORIZONTAL : ORIENTATIONS.VERTICAL);\n        \n        // Set the scale variable\n        this._varScale = this.getScale(this.variable);\n        console.assert(this._varScale instanceof AbstractScale);\n        // Subscribe to event publishers\n        this._varScale.onUpdate(this.uuid, this.drawAxis);\n\n        this._stack = this.getStack();\n    },\n    mounted() {\n        this.drawAxis();\n    },\n    methods: {\n        removeAxis() {\n            d3_select(this.axisSelector).select(\"svg\").remove();\n        },\n        drawAxis() {\n            const vm = this;\n            vm.removeAxis();\n            \n            const varScale = vm._varScale;\n            const stack = vm._stack;\n            \n            \n\n            let range;\n            if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                range = [0, vm.pWidth];\n            } else if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                range = [vm.pHeight, 0];\n            }\n\n            let axisFunction;\n            if(vm._side === SIDES.TOP) {\n                axisFunction = d3_axisTop;\n            } else if(vm._side === SIDES.LEFT) {\n                axisFunction = d3_axisLeft;\n            } else if(vm._side === SIDES.RIGHT) {\n                axisFunction = d3_axisRight;\n            } else if(vm._side === SIDES.BOTTOM) {\n                axisFunction = d3_axisBottom;\n            }\n\n            let scaleZoomedOut, scaleZoomedIn, tickSizeOuter;\n            if(varScale.type === AbstractScale.types.DISCRETE) {\n                scaleZoomedOut = d3_scaleBand()\n                    .domain(varScale.domain)\n                    .range(range);\n                scaleZoomedIn = d3_scaleBand()\n                    .domain(varScale.domainFiltered)\n                    .range(range);\n                tickSizeOuter = 0;\n            } else if(varScale.type === AbstractScale.types.CONTINUOUS) {\n                scaleZoomedOut = d3_scaleLinear()\n                    .domain(varScale.domain)\n                    .range(range);\n                scaleZoomedIn = d3_scaleLinear()\n                    .domain(varScale.domainFiltered)\n                    .range(range);\n                tickSizeOuter = 6;\n                // TODO: options for log, etc...\n            }\n\n            /*\n             * Create the SVG elements\n             */\n\n            const container = d3_select(vm.axisSelector)\n                .append(\"svg\")\n                    .attr(\"width\", vm.computedWidth)\n                    .attr(\"height\", vm.computedHeight);\n            \n            const containerZoomedIn = container.append(\"g\")\n                    .attr(\"class\", \"axis-zoomed-in\")\n                    .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n            \n            /*\n             * The zoomed-in axis\n             */\n            const ticksZoomedIn = containerZoomedIn.call(axisFunction(scaleZoomedIn).tickSizeOuter(tickSizeOuter));\n            const textBboxZoomedIn = ticksZoomedIn.select(\"text\").node().getBBox();\n\n            const tickTransformFunction = (d, i, v) => {\n                let tickBbox = v[i].getBBox();\n                let tickRotateX = 0;\n                let tickRotateY = 0;\n                if(vm._side === SIDES.TOP) {\n                    tickRotateY = -tickBbox.height;\n                } else if(vm._side === SIDES.BOTTOM) {\n                    tickRotateY = tickBbox.height;\n                } else if(vm._side === SIDES.LEFT) {\n                    tickRotateX = -tickBbox.height;\n                } else if(vm._side === SIDES.RIGHT) {\n                    tickRotateX = tickBbox.height;\n                }\n                return \"rotate(\" + vm.tickRotation + \",\" + tickRotateX + \",\" + tickRotateY + \")\";\n            }\n\n            ticksZoomedIn.selectAll(\"text\")\t\n                    .style(\"text-anchor\", (vm._side === SIDES.LEFT || vm._side === SIDES.BOTTOM ? \"end\" : \"start\"))\n                    .attr(\"transform\", tickTransformFunction);\n            \n            // Get the width/height of the zoomed-in axis, before removing the text\n            const axisBboxZoomedIn = container.select(\".axis-zoomed-in\").node().getBBox();\n            \n            if(varScale.type === AbstractScale.types.DISCRETE) {\n                const barWidth = vm.pWidth / varScale.domainFiltered.length;\n                if(barWidth < textBboxZoomedIn.height) {\n                    ticksZoomedIn.selectAll(\"text\")\n                        .remove();\n                }\n            }\n\n\n            \n\n            /*\n             * The zoomed-out axis\n             */\n\n            const betweenAxisMargin = 4;\n            let axisBboxZoomedOut;\n\n            let zoomedOutTranslateX = vm.computedTranslateX;\n            let zoomedOutTranslateY = vm.computedTranslateY;\n\n            if(vm._side === SIDES.LEFT) {\n                zoomedOutTranslateX -= (axisBboxZoomedIn.width + betweenAxisMargin);\n            } else if(vm._side === SIDES.BOTTOM) {\n                zoomedOutTranslateY += (axisBboxZoomedIn.height + betweenAxisMargin);\n            } else if(vm._side === SIDES.TOP) {\n                zoomedOutTranslateY -= (axisBboxZoomedIn.height + betweenAxisMargin);\n            } else if(vm._side === SIDES.RIGHT) {\n                zoomedOutTranslateX += (axisBboxZoomedIn.width + betweenAxisMargin);\n            }\n\n            if(!vm.disableBrushing) {\n                \n                const containerZoomedOut = container.append(\"g\")\n                        .attr(\"class\", \"axis-zoomed-out\")\n                        .attr(\"transform\", \"translate(\" + zoomedOutTranslateX + \",\" + zoomedOutTranslateY + \")\");\n                \n                const ticksZoomedOut = containerZoomedOut.call(axisFunction(scaleZoomedOut).tickSizeOuter(tickSizeOuter));\n                const textBboxZoomedOut = ticksZoomedOut.select(\"text\").node().getBBox();\n\n                ticksZoomedOut.selectAll(\"text\")\t\n                        .style(\"text-anchor\", (vm._side === SIDES.LEFT || vm._side === SIDES.BOTTOM ? \"end\" : \"start\"))\n                        .attr(\"transform\", tickTransformFunction);\n                \n                // Get the width/height of the zoomed-out axis, before removing the text\n                axisBboxZoomedOut = container.select(\".axis-zoomed-out\").node().getBBox();\n                \n                if(varScale.type === AbstractScale.types.DISCRETE) {\n                    const barWidth = vm.pWidth / varScale.domain.length;\n                    if(barWidth < textBboxZoomedOut.height) {\n                        ticksZoomedOut.selectAll(\"text\")\n                            .remove();\n                    }\n                }\n\n            \n\n                /*\n                 * Add brushing to the zoomed-out axis\n                 */\n\n                \n\n                /*\n                 * Display current zoom state as overlay on zoomed-out axis\n                 */\n                \n                if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                    let zoomRectTranslateX;\n                    if(vm._side === SIDES.LEFT) {\n                        zoomRectTranslateX = (-axisBboxZoomedOut.width-betweenAxisMargin);\n                    } else if(vm._side === SIDES.RIGHT) {\n                        zoomRectTranslateX = 0;\n                    }\n                    if(varScale.type === AbstractScale.types.CONTINUOUS) {  \n                        let start = varScale.domainFiltered[0];\n                        let end = varScale.domainFiltered[1];\n                        containerZoomedOut.append(\"rect\")\n                            .attr(\"width\", axisBboxZoomedOut.width+betweenAxisMargin)\n                            .attr(\"height\", scaleZoomedOut(start) - scaleZoomedOut(end))\n                            .attr(\"x\", 0)\n                            .attr(\"y\", scaleZoomedOut(end))\n                            .attr(\"fill\", \"silver\")\n                            .attr(\"fill-opacity\", 0.5)\n                            .attr(\"transform\", \"translate(\" + zoomRectTranslateX + \",0)\");\n                    } else if(varScale.type === AbstractScale.types.DISCRETE) {\n                        // TODO\n                    }\n                } else if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                    let zoomRectTranslateY;\n                    if(vm._side === SIDES.TOP) {\n                        zoomRectTranslateY = (-axisBboxZoomedOut.height-betweenAxisMargin);\n                    } else if(vm._side === SIDES.BOTTOM) {\n                        zoomRectTranslateY = 0;\n                    }\n                    if(varScale.type === AbstractScale.types.DISCRETE) {  \n                        let eachBand = vm.pWidth / varScale.domain.length;\n                        for(let domainFilteredItem of varScale.domainFiltered) {\n                            containerZoomedOut.append(\"rect\")\n                                .attr(\"width\", eachBand)\n                                .attr(\"height\", axisBboxZoomedOut.height)\n                                .attr(\"x\", scaleZoomedOut(domainFilteredItem))\n                                .attr(\"y\", 0)\n                                .attr(\"fill\", \"silver\")\n                                .attr(\"fill-opacity\", 0.5)\n                                .attr(\"transform\", \"translate(0,\" + zoomRectTranslateY + \")\");\n                        }\n                    } else if(varScale.type === AbstractScale.types.CONTINUOUS) {\n                        let start = varScale.domainFiltered[0];\n                        let end = varScale.domainFiltered[1];\n                        containerZoomedOut.append(\"rect\")\n                            .attr(\"width\", scaleZoomedOut(end) - scaleZoomedOut(start))\n                            .attr(\"height\", axisBboxZoomedOut.height+betweenAxisMargin)\n                            .attr(\"x\", scaleZoomedOut(start))\n                            .attr(\"y\", 0)\n                            .attr(\"fill\", \"silver\")\n                            .attr(\"fill-opacity\", 0.5)\n                            .attr(\"transform\", \"translate(0,\" + zoomRectTranslateY + \")\");\n                    }\n                }\n\n\n                let axisContainerSize;\n                let brush, brushed;\n                if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                    axisContainerSize = axisBboxZoomedOut.width;\n                    if(varScale.type === AbstractScale.types.CONTINUOUS) {\n                        brushed = () => {\n                            let s = d3_event.selection || scaleZoomedOut.range().slice().reverse();\n                            let s2 = s.map(scaleZoomedOut.invert, scaleZoomedOut);\n                            varScale.zoom(s2[1], s2[0]);\n                            stack.push(new HistoryEvent(HistoryEvent.types.SCALE, varScale.id, \"zoom\", [s2[1], s2[0]]));\n\n                        }\n                    } else if(varScale.type === AbstractScale.types.DISCRETE) {\n                        brushed = () => {\n                            let s = d3_event.selection || scaleZoomedOut.range().slice().reverse();\n                            let eachBand = vm.pWidth / varScale.domain.length;\n                            let startIndex = Math.floor((s[0] / eachBand));\n                            let endIndex = Math.ceil((s[1] / eachBand));\n                            varScale.zoom(startIndex, endIndex);\n                            stack.push(new HistoryEvent(HistoryEvent.types.SCALE, varScale.id, \"zoom\", [startIndex, endIndex]));\n                            \n                        }\n                    }\n                    let brushExtent;\n                    if(vm._side === SIDES.LEFT) {\n                        brushExtent = [[-axisContainerSize-betweenAxisMargin, 0], [0, vm.pHeight]];\n                    } else if(vm._side === SIDES.RIGHT) {\n                        brushExtent = [[0, 0], [axisContainerSize+betweenAxisMargin, vm.pHeight]];\n                    }\n                    brush = d3_brushY()\n                        .extent(brushExtent)\n                        .on(\"end.\" + vm.axisElemID, brushed);\n                    \n                } else if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                    axisContainerSize = axisBboxZoomedOut.height;\n                    if(varScale.type === AbstractScale.types.CONTINUOUS) {\n                        brushed = () => {\n                            let s = d3_event.selection || scaleZoomedOut.range().slice();\n                            let s2 = s.map(scaleZoomedOut.invert, scaleZoomedOut);\n                            varScale.zoom(s2[0], s2[1]);\n                            stack.push(new HistoryEvent(HistoryEvent.types.SCALE, varScale.id, \"zoom\", [s2[0], s2[1]]));\n                        }\n                    } else if(varScale.type === AbstractScale.types.DISCRETE) {\n                        brushed = () => {\n                            let s = d3_event.selection || scaleZoomedOut.range();\n                            let eachBand = vm.pWidth / varScale.domain.length;\n                            let startIndex = Math.floor((s[0] / eachBand));\n                            let endIndex = Math.ceil((s[1] / eachBand));\n                            varScale.zoom(startIndex, endIndex);\n                            stack.push(new HistoryEvent(HistoryEvent.types.SCALE, varScale.id, \"zoom\", [startIndex, endIndex]));\n                        }\n                    }\n                    let brushExtent;\n                    if(vm._side === SIDES.TOP) {\n                        brushExtent = [[0, -axisContainerSize-betweenAxisMargin], [vm.pWidth, 0]];\n                    } else if(vm._side === SIDES.BOTTOM) {\n                        brushExtent = [[0, 0], [vm.pWidth, axisContainerSize+betweenAxisMargin]];\n                    }\n                    brush = d3_brushX()\n                        .extent(brushExtent)\n                        .on(\"end.\" + vm.axisElemID, brushed);\n                }\n\n                containerZoomedOut.append(\"g\")\n                    .attr(\"class\", \"brush\")\n                    .call(brush);\n\n            } // end if not disable brushing\n            \n            /*\n             * Axis label text\n             */\n\n            const containerLabel = container.append(\"g\")\n                    .attr(\"class\", \"axis-label\")\n                    .attr(\"transform\", \"translate(\" + zoomedOutTranslateX + \",\" + zoomedOutTranslateY + \")\");\n            \n            const labelText = containerLabel.append(\"text\")\n                .style(\"text-anchor\", \"middle\")\n                .text(varScale.name);\n\n            const labelTextBbox = labelText.node().getBBox();\n\n            if(vm.disableBrushing) {\n                axisBboxZoomedOut = { width: 0, height: 0 };\n            }\n\n            let labelX, labelY, labelRotate;\n            if(vm._side === SIDES.LEFT) {\n                labelY = -(axisBboxZoomedOut.width + (labelTextBbox.height / 2));\n                labelX = -(vm.pHeight / 2);\n                labelRotate = -90;\n            } else if(vm._side === SIDES.BOTTOM) {\n                labelX = (vm.pWidth / 2);\n                labelY = (axisBboxZoomedOut.height + (labelTextBbox.height / 2) + (betweenAxisMargin * 2));\n                labelRotate = 0;\n            } else if(vm._side === SIDES.TOP) {\n                labelX = (vm.pWidth / 2);\n                labelY = -(axisBboxZoomedOut.height + (labelTextBbox.height / 2));\n                labelRotate = 0;\n            } else if(vm._side === SIDES.RIGHT) {\n                labelY = -(axisBboxZoomedOut.width + (labelTextBbox.height / 2));\n                labelX = (vm.pHeight / 2);\n                labelRotate = 90;\n            }\n\n            labelText\n                .attr(\"x\", labelX)\n                .attr(\"y\", labelY)\n                .attr(\"transform\", \"rotate(\" + labelRotate + \")\");\n            \n        },\n        downloadAxis() {\n            let node = d3_select(this.axisSelector).select(\"svg\").node();\n            saveSvgAsPng(node, this.axisElemID + \".png\");\n        }\n    }\n}\n</script>\n\n<style>\n@import '../style/axis-style.css';\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Axis.vue?vue&type=template&id=7b3d5b3f&\"\nimport script from \"./Axis.vue?vue&type=script&lang=js&\"\nexport * from \"./Axis.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Axis.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Axis.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vdp-axis\",style:({\n        'height': this.computedHeight + 'px', \n        'width': this.computedWidth + 'px',\n        'top': this.computedTop + 'px',\n        'left': this.computedLeft + 'px'\n    }),attrs:{\"id\":this.axisElemID}},[_c('svg',{attrs:{\"width\":this.computedWidth,\"height\":this.computedHeight}}),_c('div',{staticClass:\"vdp-genome-input\",style:({ 'left': this.computedTranslateX + 'px' })},[_c('label',[_vm._v(\"Chromosome\")]),_vm._v(\" \\n        \"),_c('select',{on:{\"change\":_vm.onChromosomeChange}},[_c('option',{attrs:{\"value\":\"*\"},domProps:{\"selected\":_vm.isWholeGenome}},[_vm._v(\"*\")]),_vm._l((_vm.allChromosomes),function(chromosomeName){return _c('option',{key:chromosomeName,domProps:{\"selected\":_vm.selectedChromosome === chromosomeName}},[_vm._v(_vm._s(chromosomeName))])})],2),_vm._v(\" \\n        \"),(_vm.isSingleChromosome)?_c('span',[_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.selectedChromosomeStart.toLocaleString()},on:{\"change\":_vm.onChromosomeStartChange}}),_vm._v(\"\\n             - \\n            \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.selectedChromosomeEnd.toLocaleString()},on:{\"change\":_vm.onChromosomeEndChange}}),_vm._v(\"\\n             \\n            \"),_c('button',{on:{\"click\":_vm.onChromosomeShiftLeft}},[_vm._v(\"<<\")]),_c('button',{on:{\"click\":_vm.onChromosomeShiftRight}},[_vm._v(\">>\")]),_vm._v(\"\\n             \\n            \"),_c('button',{on:{\"click\":_vm.onChromosomeZoomIn}},[_vm._v(\"+\")]),_c('button',{on:{\"click\":_vm.onChromosomeZoomOut}},[_vm._v(\"-\")])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { dispatch as d3_dispatch } from \"d3-dispatch\";\nimport { sum as d3_sum } from \"d3-array\";\n\nconst DISPATCH_EVENT_UPDATE = \"update\";\nconst DISPATCH_EVENT_HIGHLIGHT = \"highlight\";\nconst DISPATCH_EVENT_HIGHLIGHT_DESTROY = \"highlight-destroy\";\n\nexport const CHROMOSOMES = [\n    '1',\n    '2', \n    '3', \n    '4', \n    '5', \n    '6', \n    '7', \n    '8', \n    '9', \n    '10', \n    '11', \n    '12', \n    '13', \n    '14', \n    '15', \n    '16', \n    '17', \n    '18', \n    '19', \n    '20', \n    '21', \n    '22', \n    'X', \n    'Y', \n    'M'\n];\n\nexport const CHROMOSOME_LENGTHS = {\n    '1': 249250621,\n    '2': 243199373,\n    '3': 198022430,\n    '4': 191154276,\n    '5': 180915260,\n    '6': 171115067,\n    '7': 159138663,\n    '8': 146364022,\n    '9': 141213431,\n    '10': 135534747,\n    '11': 135006516,\n    '12': 133851895,\n    '13': 115169878,\n    '14': 107349540,\n    '15': 102531392,\n    '16': 90354753,\n    '17': 81195210,\n    '18': 78077248,\n    '19': 59128983,\n    '20': 63025520,\n    '21': 48129895,\n    '22': 51304566,\n    'X': 155270560,\n    'Y': 59373566,\n    'M': 16571\n};\n\n/**\n * Scale class for a genome variable.\n * Note: this does NOT inherit from AbstractScale.\n */\nexport default class GenomeScale {\n\n    /**\n     * Create a genomic scale.\n     * @param {*} id The ID for the scale.\n     * @param {*} name The name for the scale.\n     */\n    constructor(id, name) {\n        this._id = id;\n        this._name = name;\n\n        this._chromosomes = CHROMOSOMES;\n        this._chromosomesFiltered = CHROMOSOMES.slice();\n\n        this._domains = CHROMOSOMES.map((el) => [0, CHROMOSOME_LENGTHS[el]]);\n        this._domainsFiltered = this._domains.slice();\n\n        this._dispatch = d3_dispatch(\n            DISPATCH_EVENT_UPDATE, \n            DISPATCH_EVENT_HIGHLIGHT, \n            DISPATCH_EVENT_HIGHLIGHT_DESTROY\n        );\n    }\n    \n    /**\n     * @returns {string} The ID for the scale.\n     */\n    get id() {\n        return this._id;\n    }\n    \n    /**\n     * @returns {string} The name for the scale.\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * @returns {array} Array of chromosome names.\n     */\n    get chromosomes() {\n        return this._chromosomes;\n    }\n\n    /**\n     * @returns {array} Filtered array of chromosome names.\n     */\n    get chromosomesFiltered() {\n        return this._chromosomesFiltered;\n    }\n\n    /**\n     * @param {string} chromosome A chromosome name.\n     * @returns {array} Tuple-like array of inter-chromosome domain.\n     */\n    getDomain(chromosome) {\n        return this._domains[this._chromosomes.indexOf(chromosome)];\n    }\n\n    /**\n     * @returns {array} Array of tuple-like arrays of inter-chromosome domains.\n     */\n    getDomains() {\n        return this._domains;\n    }\n\n    /**\n     * @param {string} chromosome A chromosome name.\n     * @returns {array} Tuple-like array of inter-chromosome domain filtered.\n     */\n    getDomainFiltered(chromosome) {\n        return this._domainsFiltered[this._chromosomesFiltered.indexOf(chromosome)];\n    }\n\n    /**\n     * @returns {array} Array of tuple-like arrays of inter-chromosome domains filtered.\n     */\n    getDomainsFiltered() {\n        return this._domainsFiltered;\n    }\n\n    /**\n     * @returns {array} Array of ratios corresponding to chromosome length over genome length.\n     */\n    getChromosomeRatios() {\n        let cumsum = this._domains.reduce((a, h) => (a + (h[1] - h[0])), 0);\n        return this._domains.map((el) => ((el[1] - el[0]) / cumsum));\n    }\n\n    /**\n     * @returns {array} Array of ratios corresponding to chromosome length over genome length, for filtered chromosomes.\n     */\n    getChromosomeRatiosFiltered() {\n        let cumsum = this._domainsFiltered.reduce((a, h) => (a + (h[1] - h[0])), 0);\n        return this._domainsFiltered.map((el) => ((el[1] - el[0]) / cumsum));\n    }\n\n    /**\n     * @returns {array} Array of cumulative ratios corresponding to chromosome length over genome length.\n     */\n    getChromosomeRatiosCumulative() {\n        let ratios = this.getChromosomeRatios();\n        let ratiosCumulative = [];\n        let curr = 0;\n        for(let ratio of ratios) {\n            ratiosCumulative.push(curr);\n            curr += ratio;\n        }\n        return ratiosCumulative;\n    }\n\n    /**\n     * @returns {array} Array of cumulative ratios corresponding to chromosome length over genome length, for filtered chromosomes.\n     */\n    getChromosomeRatiosCumulativeFiltered() {\n        let ratios = this.getChromosomeRatiosFiltered();\n        let ratiosCumulative = [];\n        let curr = 0;\n        for(let ratio of ratios) {\n            ratiosCumulative.push(curr);\n            curr += ratio;\n        }\n        return ratiosCumulative;\n    }\n\n    /**\n     * Converts a genomic position to a proportion over the whole genome\n     * @param {string} chromosome The chromosome\n     * @param {number} position The position on the \n     * @returns {float} Ratio of position to total genome length\n     */\n    convertPositionToRatio(chromosome, position) {\n        let genomeLength = d3_sum(this._domains.map((el) => (el[1] - el[0])));\n        let chromosomeIndex = this._chromosomes.indexOf(chromosome);\n        return this._chromosomes.reduce((a, h) => {\n            let curr = a;\n            let currChromosomeIndex = this._chromosomes.indexOf(h);\n            let currChromosomeDomain = this._domains[currChromosomeIndex];\n            if(currChromosomeIndex == chromosomeIndex) {\n                curr += (position - currChromosomeDomain[0]);\n            } else if(currChromosomeIndex < chromosomeIndex) {\n                curr += (currChromosomeDomain[1] - currChromosomeDomain[0]);\n            }\n            return curr;\n        }, 0) / genomeLength;\n    }\n\n    /**\n     * Converts a genomic position to a proportion over the whole genome\n     * @param {string} chromosome The chromosome\n     * @param {number} position The position on the \n     * @returns {float} Ratio of position to total genome length\n     */\n    convertPositionToRatioFiltered(chromosome, position) {\n        let genomeLength = d3_sum(this._domainsFiltered.map((el) => (el[1] - el[0])));\n        let chromosomeIndex = this._chromosomesFiltered.indexOf(chromosome);\n        return this._chromosomesFiltered.reduce((a, h) => {\n            let curr = a;\n            let currChromosomeIndex = this._chromosomesFiltered.indexOf(h);\n            let currChromosomeDomain = this._domainsFiltered[currChromosomeIndex];\n            if(currChromosomeIndex == chromosomeIndex) {\n                curr += (position - currChromosomeDomain[0]);\n            } else if(currChromosomeIndex < chromosomeIndex) {\n                curr += (currChromosomeDomain[1] - currChromosomeDomain[0]);\n            }\n            return curr;\n        }, 0) / genomeLength;\n    }\n    \n    /**\n     * Convert a domain value to a human-readable value.\n     * @param {string} chromosome A chromosome value.\n     * @param {number} position A chromosome position value.\n     * @returns {string} The corresponding humanDomain value.\n     */\n    toHuman(chromosome, position) {\n        // TODO: number format for commas, etc...\n        return \"chr\" + chromosome + \":\" + position; \n    }\n    \n    /**\n     * Filter by limiting to a single chromosome.\n     * @param {string} selectedChromosome The chromosome to select.\n     */\n    filterByChromosome(selectedChromosome) {\n        let chromosomeIndex = this._chromosomes.indexOf(selectedChromosome);\n        this._chromosomesFiltered = [selectedChromosome];\n        this._domainsFiltered = [this._domains[chromosomeIndex]];\n        this.emitUpdate();\n    }\n\n    /**\n     * Filter by limiting to a single chromosome and specific position.\n     * @param {string} selectedChromosome The chromosome to select.\n     * @param {number} start The start position.\n     * @param {number} end The end position.\n     */\n    filterByChromosomeAndPosition(selectedChromosome, start, end) {\n        this._chromosomesFiltered = [selectedChromosome];\n        this._domainsFiltered = [[start, end]];\n        this.emitUpdate();\n    }\n\n    /**\n     * Subscribe to highlight events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onHighlight(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_HIGHLIGHT + \".\" + componentId, callback);\n    }\n\n    /**\n     * Subscribe to highlight destroy events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onHighlightDestroy(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_HIGHLIGHT_DESTROY + \".\" + componentId, callback);\n    }\n\n    /**\n     * Subscribe to update events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onUpdate(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_UPDATE + \".\" + componentId, callback);\n    }\n\n    /**\n     * Emit the highlight event.\n     */\n    emitHighlight(chromosome, position) {\n        this._dispatch.call(DISPATCH_EVENT_HIGHLIGHT, null, chromosome, position);\n    }\n\n    /**\n     * Emit the highlight destroy event.\n     */\n    emitHighlightDestroy() {\n        this._dispatch.call(DISPATCH_EVENT_HIGHLIGHT_DESTROY);\n    }\n\n    /**\n     * Emit the update event.\n     */\n    emitUpdate() {\n        this._dispatch.call(DISPATCH_EVENT_UPDATE);\n    }\n\n    /**\n     * Resets the filtered domain, using the full original domain.\n     */\n    reset() {\n        this._domainsFiltered = this._domains.slice();\n        this._chromosomesFiltered = this._chromosomes.slice();\n        this.emitUpdate();\n    }\n\n   \n}","<template>\n    <div \n        :id=\"this.axisElemID\" \n        class=\"vdp-axis\" \n        :style=\"{\n            'height': this.computedHeight + 'px', \n            'width': this.computedWidth + 'px',\n            'top': this.computedTop + 'px',\n            'left': this.computedLeft + 'px'\n        }\"\n    >\n        <svg :width=\"this.computedWidth\" :height=\"this.computedHeight\"></svg>\n        <div class=\"vdp-genome-input\" :style=\"{ 'left': this.computedTranslateX + 'px' }\">\n            <label>Chromosome</label>&nbsp;\n            <select @change=\"onChromosomeChange\">\n                <option value=\"*\" :selected=\"isWholeGenome\">*</option>\n                <option v-for=\"chromosomeName in allChromosomes\" \n                    :key=\"chromosomeName\"\n                    :selected=\"selectedChromosome === chromosomeName\"\n                >{{ chromosomeName }}</option>\n            </select>&nbsp;\n            <span v-if=\"isSingleChromosome\">\n                <input type=\"text\" :value=\"selectedChromosomeStart.toLocaleString()\" @change=\"onChromosomeStartChange\"/>\n                &nbsp;-&nbsp;\n                <input type=\"text\" :value=\"selectedChromosomeEnd.toLocaleString()\" @change=\"onChromosomeEndChange\"/>\n                &nbsp;\n                <button @click=\"onChromosomeShiftLeft\">&lt;&lt;</button>\n                <button @click=\"onChromosomeShiftRight\">&gt;&gt;</button>\n                &nbsp;\n                <button @click=\"onChromosomeZoomIn\">+</button>\n                <button @click=\"onChromosomeZoomOut\">-</button>\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { axisTop as d3_axisTop, axisLeft as d3_axisLeft, axisRight as d3_axisRight, axisBottom as d3_axisBottom } from 'd3-axis';\nimport { zip as d3_zip } from 'd3-array';\n\nimport { saveSvgAsPng } from 'save-svg-as-png';\n\nimport GenomeScale from './../scales/GenomeScale.js';\nimport HistoryEvent from './../history/HistoryEvent.js';\n\nconst SIDES = Object.freeze({ \"TOP\": 1, \"LEFT\": 2, \"RIGHT\": 3, \"BOTTOM\": 4 });\nconst ORIENTATIONS = Object.freeze({ \"VERTICAL\": 1, \"HORIZONTAL\": 2 }); // vertical = left/right, horizontal = top/bottom\n\nlet uuid = 0;\n/**\n * @prop {string} scaleKey The key for the genome scale instance, passed to getScale.\n * @prop {string} side The side for the scale.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} getStack Function that returns a HistoryStack instance.\n * \n * @example\n * <GenomeAxis\n *      :scaleKey=\"genome_scale\"\n *      side=\"bottom\" \n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'GenomeAxis',\n    props: {\n        'scaleKey': {\n            type: String\n        },\n        'side': {\n            type: String\n        },\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        }\n    },\n    data() {\n        return {\n            isSingleChromosome: false,\n            isWholeGenome: false,\n            selectedChromosome: null,\n            selectedChromosomeStart: null,\n            selectedChromosomeEnd: null\n        }\n    },\n    computed: {\n        axisElemID: function() {\n            return 'g_axis_' + this.uuid;\n        },\n        axisSelector: function() {\n            return \"#\" + this.axisElemID;\n        },\n        computedWidth: function() {\n            if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft + this.pWidth + this.pMarginRight;\n            } else if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginRight;\n            }\n        },\n        computedHeight: function() {\n            if(this._side === SIDES.LEFT || this._side === SIDES.RIGHT) {\n                return this.pMarginTop + this.pHeight + this.pMarginBottom;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.BOTTOM) {\n                return this.pMarginBottom;\n            }\n        },\n        computedTop: function() {\n            if(this._side === SIDES.BOTTOM) {\n                return this.pMarginTop + this.pHeight;\n            }\n            return 0;\n        },\n        computedLeft: function() {\n            if(this._side === SIDES.RIGHT) {\n                return this.pMarginLeft + this.pWidth;\n            }\n            return 0;\n        },\n        computedTranslateX: function() {\n            if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft - 1;\n            } else if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft;\n            }\n            return 0;\n        },\n        computedTranslateY: function() {\n            if(this._side === SIDES.LEFT) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop - 1;\n            }\n            return 0;\n        },\n        allChromosomes: function() {\n            return this._varScale.chromosomes;\n        }\n    },\n    watch: {\n        pWidth: function () {\n            this.drawAxis();\n        },\n        pHeight: function () {\n            this.drawAxis();\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set side and orientation enum values from side prop\n        let sideString = this.side.toUpperCase();\n        console.assert(Object.keys(SIDES).includes(sideString));\n        this._side = SIDES[sideString];\n        this._orientation = (this._side === SIDES.TOP || this._side === SIDES.BOTTOM ? ORIENTATIONS.HORIZONTAL : ORIENTATIONS.VERTICAL);\n\n        console.assert(this._side === SIDES.BOTTOM); // TODO: implement for other sides\n        \n        // Set the scale variable\n        this._varScale = this.getScale(this.scaleKey);\n        console.assert(this._varScale instanceof GenomeScale);\n        // Subscribe to event publishers\n        this._varScale.onUpdate(this.uuid, this.drawAxis);\n\n        this._stack = this.getStack();\n    },\n    mounted() {\n        this.drawAxis();\n    },\n    methods: {\n        onChromosomeChange(e) {\n            if(e.target.value && e.target.value !== \"*\") {\n                this._varScale.filterByChromosome(e.target.value);\n                this._stack.push(new HistoryEvent(HistoryEvent.types.SCALE, this.scaleKey, \"filterByChromosome\", [e.target.value]));\n            } else {\n                this._varScale.reset();\n                this._stack.push(new HistoryEvent(HistoryEvent.types.SCALE, this.scaleKey, \"reset\"));\n            }\n        },\n        onChromosomeStartChange(e) {\n            let val = e.target.value;\n            val = parseInt(val.replace( /[^0-9]+/g, ''));\n\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            if(val !== this.selectedChromosomeStart && val >= chromosomeDomain[0] && val <= chromosomeDomain[1]) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, val, this.selectedChromosomeEnd);\n                this._stack.push(new HistoryEvent(\n                    HistoryEvent.types.SCALE, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, val, this.selectedChromosomeEnd]\n                ));\n            }\n        },\n        onChromosomeEndChange(e) {\n            let val = e.target.value;\n            val = parseInt(val.replace( /[^0-9]+/g, ''));\n\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            if(val !== this.selectedChromosomeEnd && val >= chromosomeDomain[0] && val <= chromosomeDomain[1]) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, this.selectedChromosomeStart, val);\n                this._stack.push(new HistoryEvent(\n                    HistoryEvent.types.SCALE, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, this.selectedChromosomeStart, val]\n                ));\n            }\n        },\n        onChromosomeShiftLeft() {\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            let chromosomeDomainFiltered = this._varScale.getDomainFiltered(this.selectedChromosome);\n            let chromosomeRangeFiltered = chromosomeDomainFiltered[1] - chromosomeDomainFiltered[0];\n            let newStart = Math.max(chromosomeDomain[0], this.selectedChromosomeStart - Math.floor(chromosomeRangeFiltered / 2));\n            let newEnd = Math.max(chromosomeDomain[0] + 1, this.selectedChromosomeEnd - Math.floor(chromosomeRangeFiltered / 2));\n            if(this.selectedChromosomeStart > 0) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, newStart, newEnd);\n                this._stack.push(new HistoryEvent(\n                    HistoryEvent.types.SCALE, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, newStart, newEnd]\n                ));\n            }\n        },\n        onChromosomeShiftRight() {\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            let chromosomeDomainFiltered = this._varScale.getDomainFiltered(this.selectedChromosome);\n            let chromosomeRangeFiltered = chromosomeDomainFiltered[1] - chromosomeDomainFiltered[0];\n            let newStart = Math.min(chromosomeDomain[1] - 1, this.selectedChromosomeStart + Math.floor(chromosomeRangeFiltered / 2));\n            let newEnd = Math.min(chromosomeDomain[1], this.selectedChromosomeEnd + Math.floor(chromosomeRangeFiltered / 2));\n            if(this.selectedChromosomeEnd < chromosomeDomain[1]) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, newStart, newEnd);\n                this._stack.push(new HistoryEvent(\n                    HistoryEvent.types.SCALE, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, newStart, newEnd]\n                ));\n            }\n        },\n        onChromosomeZoomIn() {\n            let chromosomeDomainFiltered = this._varScale.getDomainFiltered(this.selectedChromosome);\n            let chromosomeRangeFiltered = chromosomeDomainFiltered[1] - chromosomeDomainFiltered[0];\n            let offset = Math.floor(chromosomeRangeFiltered / 4);\n            let newStart = this.selectedChromosomeStart + offset;\n            let newEnd = this.selectedChromosomeEnd - offset;\n            if(newStart !== this.selectedChromosomeStart || newEnd !== this.selectedChromosomeEnd) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, newStart, newEnd);\n                this._stack.push(new HistoryEvent(\n                    HistoryEvent.types.SCALE, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, newStart, newEnd]\n                ));\n            }\n        },\n        onChromosomeZoomOut() {\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            let chromosomeDomainFiltered = this._varScale.getDomainFiltered(this.selectedChromosome);\n            let chromosomeRangeFiltered = chromosomeDomainFiltered[1] - chromosomeDomainFiltered[0];\n            let offset = Math.floor(chromosomeRangeFiltered / 2);\n            let newStart = Math.max(chromosomeDomain[0], this.selectedChromosomeStart - offset);\n            let newEnd = Math.min(chromosomeDomain[1], this.selectedChromosomeEnd + offset);\n            if(newStart !== this.selectedChromosomeStart || newEnd !== this.selectedChromosomeEnd) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, newStart, newEnd);\n                this._stack.push(new HistoryEvent(\n                    HistoryEvent.types.SCALE, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, newStart, newEnd]\n                ));\n            }\n        },\n        removeAxis() {\n            d3_select(this.axisSelector).select(\"svg\").selectAll(\"g\").remove();\n        },\n        drawAxis() {\n            const vm = this;\n            vm.removeAxis();\n            \n            const varScale = vm._varScale;\n\n            vm.isSingleChromosome = (vm._varScale.chromosomesFiltered.length === 1);\n            if(vm.isSingleChromosome) {\n                vm.selectedChromosome = vm._varScale.chromosomesFiltered[0];\n                let chromosomeDomain = vm._varScale.getDomainFiltered(vm.selectedChromosome);\n                vm.selectedChromosomeStart = chromosomeDomain[0];\n                vm.selectedChromosomeEnd = chromosomeDomain[1];\n            } else {\n                vm.selectedChromosome = null;\n                vm.selectedChromosomeStart = null;\n                vm.selectedChromosomeEnd = null;\n            }\n            vm.isWholeGenome = (vm._varScale.chromosomesFiltered.length === 25);\n            \n            \n            \n            let range;\n            if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                range = [0, vm.pWidth];\n            } else if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                range = [vm.pHeight, 0];\n            }\n\n            let axisFunction;\n            if(vm._side === SIDES.TOP) {\n                axisFunction = d3_axisTop;\n            } else if(vm._side === SIDES.LEFT) {\n                axisFunction = d3_axisLeft;\n            } else if(vm._side === SIDES.RIGHT) {\n                axisFunction = d3_axisRight;\n            } else if(vm._side === SIDES.BOTTOM) {\n                axisFunction = d3_axisBottom;\n            }\n\n            //let chromosomeRatiosCumulative = varScale.getChromosomeRatiosCumulative();\n            let chromosomeRatiosCumulativeFiltered = varScale.getChromosomeRatiosCumulativeFiltered();\n\n\n            //let chromosomeRatioZip = d3_zip(chromosomeRatiosCumulative, varScale.chromosomes);\n            let chromosomeRatioZipFiltered = d3_zip(chromosomeRatiosCumulativeFiltered, varScale.chromosomesFiltered);\n\n            const zipToMap = (zip) => {\n                let obj = {};\n                zip.forEach(function(data){\n                    obj[data[0]] = data[1]\n                });\n                return obj;\n            };\n\n            //let chromosomeRatioMap = zipToMap(chromosomeRatioZip);\n            let chromosomeRatioMapFiltered = zipToMap(chromosomeRatioZipFiltered);            \n            \n            let scaleZoomedIn = d3_scaleLinear()\n                .domain([0, 1])\n                .range(range);\n\n            /*\n             * Create the SVG elements\n             */\n\n            const container = d3_select(vm.axisSelector).select(\"svg\");\n            \n            const containerZoomedIn = container.append(\"g\")\n                    .attr(\"class\", \"axis-zoomed-in\")\n                    .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n            \n            /*\n             * The zoomed-in axis\n             */\n            const ticksZoomedIn = containerZoomedIn.call(\n                axisFunction(scaleZoomedIn)\n                    .tickValues(chromosomeRatiosCumulativeFiltered)\n                    .tickFormat((d) => chromosomeRatioMapFiltered[d])\n            );\n\n            \n\n            ticksZoomedIn.selectAll(\"text\")\t\n                    .style(\"text-anchor\", \"middle\");\n            \n            // Get the width/height of the zoomed-in axis, before removing the text\n            const axisBboxZoomedIn = container.select(\".axis-zoomed-in\").node().getBBox();\n\n            if(vm.isSingleChromosome) {\n                let selectedChromosome = vm._varScale.chromosomesFiltered[0];\n                let chromosomeDomain = vm._varScale.getDomainFiltered(selectedChromosome);\n                \n                let scaleChromosome = d3_scaleLinear()\n                    .domain(chromosomeDomain)\n                    .range(range);\n                \n                const containerChromosome = container.append(\"g\")\n                    .attr(\"class\", \"axis-zoomed-in\")\n                    .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n                \n                containerChromosome.call(\n                    axisFunction(scaleChromosome)\n                );\n                ticksZoomedIn.selectAll(\"text\")\n                    .style(\"display\", \"none\")\n            }\n            \n            \n\n            /*\n             * The zoomed-out axis\n             */\n\n            const betweenAxisMargin = 8;\n\n            let zoomedOutTranslateX = vm.computedTranslateX;\n            let zoomedOutTranslateY = vm.computedTranslateY;\n\n          \n            /*\n             * Axis label text\n             */\n\n            const containerLabel = container.append(\"g\")\n                    .attr(\"class\", \"axis-label\")\n                    .attr(\"transform\", \"translate(\" + zoomedOutTranslateX + \",\" + zoomedOutTranslateY + \")\");\n            \n            const labelText = containerLabel.append(\"text\")\n                .style(\"text-anchor\", \"middle\")\n                .text(varScale.name);\n\n            const labelTextBbox = labelText.node().getBBox();\n\n\n\n            let labelX, labelY, labelRotate;\n            if(vm._side === SIDES.LEFT) {\n                labelY = -(axisBboxZoomedIn.width + (labelTextBbox.height / 2));\n                labelX = -(vm.pHeight / 2);\n                labelRotate = -90;\n            } else if(vm._side === SIDES.BOTTOM) {\n                labelX = (vm.pWidth / 2);\n                labelY = (axisBboxZoomedIn.height + (labelTextBbox.height / 2) + betweenAxisMargin);\n                labelRotate = 0;\n            } else if(vm._side === SIDES.TOP) {\n                labelX = (vm.pWidth / 2);\n                labelY = -(axisBboxZoomedIn.height + (labelTextBbox.height / 2));\n                labelRotate = 0;\n            } else if(vm._side === SIDES.RIGHT) {\n                labelY = -(axisBboxZoomedIn.width + (labelTextBbox.height / 2));\n                labelX = (vm.pHeight / 2);\n                labelRotate = 90;\n            }\n\n            labelText\n                .attr(\"x\", labelX)\n                .attr(\"y\", labelY)\n                .attr(\"transform\", \"rotate(\" + labelRotate + \")\");\n            \n        },\n        downloadAxis() {\n            let node = d3_select(this.axisSelector).select(\"svg\").node();\n            saveSvgAsPng(node, this.axisElemID + \".png\");\n        }\n    }\n}\n</script>\n\n<style>\n@import '../style/axis-style.css';\n\n.vdp-genome-input {\n    position: absolute;\n    bottom: 4px;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeAxis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeAxis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GenomeAxis.vue?vue&type=template&id=34a52e90&\"\nimport script from \"./GenomeAxis.vue?vue&type=script&lang=js&\"\nexport * from \"./GenomeAxis.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GenomeAxis.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"GenomeAxis.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vdp-axis\",style:({\n        'height': this.computedHeight + 'px', \n        'width': this.computedWidth + 'px',\n        'top': this.computedTop + 'px',\n        'left': this.computedLeft + 'px'\n    }),attrs:{\"id\":this.axisElemID}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { dispatch as d3_dispatch } from \"d3-dispatch\";\n\nconst DISPATCH_EVENT_UPDATE = \"update\";\n/**\n * Represents a container of a data array.\n */\nexport default class DataContainer {\n\n    /**\n     * Create a data container.\n     * @param {string} id The ID for the data.\n     * @param {string} name The name for the data.\n     * @param {array} data The data to hold.\n     */\n    constructor(id, name, data) {\n        this._id = id;\n        this._name = name;\n        this._data = data;\n        this._dispatch = d3_dispatch(DISPATCH_EVENT_UPDATE);\n    }\n    \n    /**\n     * @returns {string} The ID for the data.\n     */\n    get id() {\n        return this._id;\n    }\n\n    /**\n     * @returns {string} The name for the data.\n     */\n    get name() {\n        return this._name;\n    }\n    \n    /**\n     * @returns {array} The data.\n     */\n    get data() {\n        return this._data;\n    }\n\n    /**\n     * @returns {array} The data copied.\n     */\n    get dataCopy() {\n        if(this.data instanceof Array) {\n            // Shallow copy\n            return Array.from(this.data);\n        }\n        return this.data;\n    }\n    \n    /**\n     * Subscribe to update events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onUpdate(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_UPDATE + \".\" + componentId, callback);\n    }\n\n    /**\n     * Emit the update event.\n     */\n    emitUpdate() {\n        this._dispatch.call(DISPATCH_EVENT_UPDATE);\n    }\n}","<template>\n    <div \n        :id=\"this.axisElemID\" \n        class=\"vdp-axis\" \n        :style=\"{\n            'height': this.computedHeight + 'px', \n            'width': this.computedWidth + 'px',\n            'top': this.computedTop + 'px',\n            'left': this.computedLeft + 'px'\n        }\"></div>\n</template>\n\n<script>\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { cluster as d3_cluster, hierarchy as d3_hierarchy } from 'd3-hierarchy';\n\nimport { saveSvgAsPng } from 'save-svg-as-png';\n\nimport AbstractScale from './../scales/AbstractScale.js';\nimport DataContainer from './../data/DataContainer.js';\nimport HistoryEvent from './../history/HistoryEvent.js';\n\nconst SIDES = Object.freeze({ \"TOP\": 1, \"LEFT\": 2, \"RIGHT\": 3, \"BOTTOM\": 4 });\nconst ORIENTATIONS = Object.freeze({ \"VERTICAL\": 1, \"HORIZONTAL\": 2 }); // vertical = left/right, horizontal = top/bottom\n\nlet uuid = 0;\n/**\n * @prop {string} variable The axis variable key.\n * @prop {string} data The data variable key.\n * @prop {string} side The side for the scale.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} getStack Function that returns a HistoryStack instance.\n * @prop {function} getData Function that takes a data key string and returns a DataContainer instance.\n * \n * @example\n * <DendrogramAxis\n *      variable=\"sample_id\"\n *      data=\"sample_clusters\"\n *      side=\"top\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"300\"\n *      :pMarginLeft=\"10\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"10\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'DendrogramAxis',\n    props: {\n        'variable': {\n            type: String\n        },\n        'data': {\n            type: String\n        },\n        'side': {\n            type: String\n        },\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'getData': {\n            type: Function\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        }\n    },\n    data() {\n        return {\n            \n        }\n    },\n    computed: {\n        axisElemID: function() {\n            return 'd_axis_' + this.uuid;\n        },\n        axisSelector: function() {\n            return \"#\" + this.axisElemID;\n        },\n        computedWidth: function() {\n            if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft + this.pWidth + this.pMarginRight;\n            } else if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginRight;\n            }\n        },\n        computedHeight: function() {\n            if(this._side === SIDES.LEFT || this._side === SIDES.RIGHT) {\n                return this.pMarginTop + this.pHeight + this.pMarginBottom;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.BOTTOM) {\n                return this.pMarginBottom;\n            }\n        },\n        computedTop: function() {\n            if(this._side === SIDES.BOTTOM) {\n                return this.pMarginTop + this.pHeight;\n            }\n            return 0;\n        },\n        computedLeft: function() {\n            if(this._side === SIDES.RIGHT) {\n                return this.pMarginLeft + this.pWidth;\n            }\n            return 0;\n        },\n        computedTranslateX: function() {\n            if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft;\n            }\n            return 0;\n        },\n        computedTranslateY: function() {\n            if(this._side === SIDES.LEFT || this._side === SIDES.RIGHT) {\n                return this.pMarginTop;\n            }\n            return 0;\n        }\n    },\n    watch: {\n        pWidth: function () {\n            this.drawAxis();\n        },\n        pHeight: function () {\n            this.drawAxis();\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set side and orientation enum values from side prop\n        let sideString = this.side.toUpperCase();\n        console.assert(Object.keys(SIDES).includes(sideString));\n        this._side = SIDES[sideString];\n        this._orientation = (this._side === SIDES.TOP || this._side === SIDES.BOTTOM ? ORIENTATIONS.HORIZONTAL : ORIENTATIONS.VERTICAL);\n\n        console.assert(this._side === SIDES.TOP); // TODO: implement for other sides\n        \n        // Set the scale variable\n        this._varScale = this.getScale(this.variable);\n        console.assert(this._varScale instanceof AbstractScale);\n\n        // Set the data variable\n        this._data = this.getData(this.data);\n        console.assert(this._data instanceof DataContainer)\n\n        // Subscribe to event publishers\n        this._varScale.onUpdate(this.uuid, this.drawAxis);\n\n        this._stack = this.getStack();\n    },\n    mounted() {\n        this.drawAxis();\n    },\n    methods: {\n        removeAxis() {\n            d3_select(this.axisSelector).select(\"svg\").remove();\n        },\n        drawAxis() {\n            const vm = this;\n            vm.removeAxis();\n            \n            const varScale = vm._varScale;\n            const stack = vm._stack;\n            \n            const data = vm._data.dataCopy;\n            \n            let size;\n            if(this._side === SIDES.BOTTOM) {\n                size = [vm.pWidth, vm.pMarginBottom];\n            } else if(this._side === SIDES.TOP) {\n                size = [vm.pWidth, vm.pMarginTop];\n            } else if(this._side === SIDES.LEFT) {\n                size = [vm.pMarginLeft, vm.pHeight];\n            } else if(this._side === SIDES.RIGHT) {\n                size = [vm.pMarginRight, vm.pHeight];\n            }\n\n            // Prepare hierarchy\n            const tree = d3_cluster()\n                .size(size)\n                .separation(() => 1);\n            const root = d3_hierarchy(data);\n            tree(root);\n\n            // Filter to get the leaf nodes\n            const leaves = root.descendants().filter((el) => (!el.children));\n\n            \n            /*\n             * Create the SVG elements\n             */\n\n            const container = d3_select(vm.axisSelector)\n                .append(\"svg\")\n                    .attr(\"width\", vm.computedWidth)\n                    .attr(\"height\", vm.computedHeight);\n            \n            const gTree = container.append(\"g\")\n                .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n\n            gTree.selectAll(\".link\")\n                .data(root.descendants().slice(1))\n                .enter().append(\"path\")\n                .attr(\"class\", \"link\")\n                .attr(\"d\", function(d) {\n                    return \"M\" + d.parent.x + \",\" + d.parent.y\n                        + \"H\" + d.x\n                        + \"M\" + d.x + \",\" + d.y\n                        + \"V\" + d.parent.y;\n                })\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"#555\")\n                .attr(\"stroke-opacity\", 0.6)\n                .attr(\"stroke-width\", \"1.5px\");\n            \n            const node = gTree.selectAll(\".node\")\n                .data(root.descendants())\n                .enter().append(\"g\")\n                .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n                .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n            \n            node.append(\"text\")\n                .style(\"display\", (d) => { return d.children ? 'none' : 'none'; })\n                .text((d) => { return d.data.name; })\n                .style(\"font\", \"10px sans-serif\")\n                .style(\"text-anchor\", \"end\")\n                .attr(\"dx\", \"-.6em\")\n                .attr(\"dy\", \".6em\")\n                .attr(\"transform\", \"rotate(-65)\");\n            \n\n            // TODO: filtering of the scale by chosen parent, storing on stack\n            \n        },\n        downloadAxis() {\n            let node = d3_select(this.axisSelector).select(\"svg\").node();\n            saveSvgAsPng(node, this.axisElemID + \".png\");\n        }\n    }\n}\n</script>\n\n<style>\n@import '../style/axis-style.css';\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DendrogramAxis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DendrogramAxis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DendrogramAxis.vue?vue&type=template&id=444f70e5&\"\nimport script from \"./DendrogramAxis.vue?vue&type=script&lang=js&\"\nexport * from \"./DendrogramAxis.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DendrogramAxis.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"DendrogramAxis.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1) + 'px'\n        })}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const TOOLTIP_DEBOUNCE = 250;","/**\n * Get the retina ratio to be able to scale up a canvas context.\n * @private\n * @param {context} c The canvas context.\n * @returns {float} The ratio.\n */\nexport const getRetinaRatio = function(c) {\n    let devicePixelRatio = window.devicePixelRatio || 1;\n    let backingStoreRatio = [\n        c.webkitBackingStorePixelRatio,\n        c.mozBackingStorePixelRatio,\n        c.msBackingStorePixelRatio,\n        c.oBackingStorePixelRatio,\n        c.backingStorePixelRatio,\n        1\n    ].reduce(function(a, b) { return a || b });\n\n    return devicePixelRatio / backingStoreRatio;\n}","/**\n * @mixin\n * @prop {string} data The data set key.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {function} getData Function that takes a data key string and returns a DataContainer.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} clickHandler Function that will be called upon click of plot.\n */\nexport default {\n    props: {\n        'data': {\n            type: String\n        },\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'getData': {\n            type: Function\n        },\n        'getScale': {\n            type: Function\n        },\n        'clickHandler': {\n            type: Function\n        }\n    },\n    data: function() {\n        return {\n            tooltipPosition: {\n                left: null,\n                top: null\n            },\n            showHighlight: false\n        };\n    },\n    computed: {\n        plotElemID: function() {\n            return 'plot_' + this.uuid;\n        },\n        hiddenPlotElemID: function() {\n            return 'plot_h_' + this.uuid;\n        },\n        highlightElemID: function() {\n            return 'highlight_' + this.uuid;\n        },\n        tooltipElemID: function() {\n            return 'tooltip_' + this.uuid;\n        },\n        plotSelector: function() {\n            return \"#\" + this.plotElemID;\n        },\n        hiddenPlotSelector: function() {\n            return \"#\" + this.hiddenPlotElemID;\n        },\n        highlightSelector: function() {\n            return \"#\" + this.highlightElemID;\n        },\n        tooltipSelector: function() {\n            return \"#\" + this.tooltipElemID;\n        },\n        tooltipPositionAttribute: function() {\n            if(this.tooltipPosition.left == null || this.tooltipPosition.top == null) {\n                return 'display: none;';\n            } else {\n                return 'left: ' + this.tooltipPosition.left + 'px; top: ' + this.tooltipPosition.top + 'px;';\n            }\n        }\n    },\n    watch: {\n        width: function () {\n            this.drawPlot();\n        },\n        height: function () {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltipHide: function() {\n            this.tooltipPosition.left = null;\n            this.tooltipPosition.top = null;\n        },\n        tooltipDestroy: function() {\n            // stub\n        },\n        removePlot: function() {\n            // stub\n        },\n        drawPlot: function() {\n            // stub\n        },\n        downloadPlot: function() {\n            let image = document.getElementById(this.plotElemID).toDataURL(\"image/png\");\n            document.write('<img src=\"'+image+'\"/>');\n        }\n    }\n}","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { stack as d3_stack, stackOrderNone as d3_stackOrderNone, stackOffsetNone as d3_stackOffsetNone } from 'd3-shape';\nimport { mouse as d3_mouse } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @extends mixin\n * \n * @example\n * <StackedBarPlot\n *      data=\"exposures_data\"\n *      x=\"sample_id\" \n *      y=\"exposure\"\n *      c=\"signature\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'StackedBarPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'c': { // color\n            type: String\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: '',\n                c: ''\n            },\n            highlightX1: 0,\n            highlightX2: 0,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlight);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y, c) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX + this.pMarginLeft;\n            this.tooltipPosition.top = mouseY + this.pMarginTop;\n\n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n        },\n        highlight(value) {\n            this.highlightX1 = this.highlightScale(value);\n            this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            this.showHighlight = true;\n\n        },\n        highlightDestroy() {\n            this.showHighlight = false;\n        },\n        drawPlot() {\n            const vm = this;\n            \n            let data = this._dataContainer.dataCopy;\n            const xScale = this._xScale;\n            const yScale = this._yScale;\n            const cScale = this._cScale;\n\n            data = data.filter((el) => xScale.domainFiltered.includes(el[vm.x]));\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n              \n            const stack = d3_stack()\n                .keys(cScale.domainFiltered)\n                .value((d, key) => { return d[key] || 0; })\n                .order(d3_stackOrderNone)\n                .offset(d3_stackOffsetNone);\n\n            const series = stack(data);\n\n            \n            /*\n             * Scale up the canvas\n             */\n            const canvas = d3_select(this.plotSelector);\n            const context = canvas.node().getContext('2d');\n\n            const canvasHidden = d3_select(this.hiddenPlotSelector);\n            const contextHidden = canvasHidden.node().getContext('2d');\n\n            const ratio = getRetinaRatio(context);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvas\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            context.scale(ratio, ratio);\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the bars\n             */\n            series.forEach((layer) => {\n                context.fillStyle = cScale.color(layer[\"key\"]); \n                layer.forEach((d) => {\n                    const col = genColor();\n                    colToNode[col] = { \"x\": d.data[vm.x], \"y\": d.data[layer[\"key\"]], \"c\": layer[\"key\"] };\n                    contextHidden.fillStyle = col;\n                    let height = y(d[0]) - y(d[1]);\n                    if(height + y(d[1]) > vm.pHeight) {\n                        height = vm.pHeight - y(d[1]);\n                    }\n                    context.fillRect(x(d.data[vm.x]), y(d[1]), barWidth, height);\n                    contextHidden.fillRect(x(d.data[vm.x]), y(d[1]), barWidth, height);\n                })\n            });\n            \n            /*\n             * Listen for mouse events\n             */\n            const canvasNode = canvas.node();\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    vm.tooltip(mouseX, mouseY, node[\"x\"], node[\"y\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"y\"], node[\"c\"]); \n                    }\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StackedBarPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StackedBarPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StackedBarPlot.vue?vue&type=template&id=50bbb9ef&\"\nimport script from \"./StackedBarPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./StackedBarPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StackedBarPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"StackedBarPlot.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1) + 'px'\n        })}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @extends mixin\n * \n * @example\n * <BarPlot\n *      data=\"exposures_single_data\"\n *      x=\"signature\" \n *      y=\"exposure\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'BarPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: ''\n            },\n            highlightX1: 0,\n            highlightX2: 0,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlight);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n\n            // Set position\n            this.tooltipPosition.left = mouseX + this.pMarginLeft;\n            this.tooltipPosition.top = mouseY + this.pMarginTop;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n        },\n        highlight(value) {\n            this.highlightX1 = this.highlightScale(value);\n            this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            this.showHighlight = true;\n\n        },\n        highlightDestroy() {\n            this.showHighlight = false;\n        },\n        drawPlot() {\n            const vm = this;\n            \n            let data = this._dataContainer.dataCopy;\n            const xScale = this._xScale;\n            const yScale = this._yScale;\n\n            data = data.filter((el) => xScale.domainFiltered.includes(el[vm.x]));\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n              \n          \n            \n            /*\n             * Scale up the canvas\n             */\n            const canvas = d3_select(this.plotSelector);\n            const context = canvas.node().getContext('2d');\n\n            const canvasHidden = d3_select(this.hiddenPlotSelector);\n            const contextHidden = canvasHidden.node().getContext('2d');\n\n            const ratio = getRetinaRatio(context);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvas\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            context.scale(ratio, ratio);\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the bars\n             */\n            data.forEach((d) => {\n                const col = genColor();\n                colToNode[col] = { \"x\": d[vm.x], \"y\": d[vm.y] };\n                contextHidden.fillStyle = col;\n\n                let height = vm.pHeight - y(d[vm.y]);\n                context.fillStyle = xScale.color(d[vm.x]);\n                context.fillRect(x(d[vm.x]), y(d[vm.y]), barWidth, height);\n                contextHidden.fillRect(x(d[vm.x]), y(d[vm.y]), barWidth, height);\n            });\n            \n            /*\n             * Listen for mouse events\n             */\n            const canvasNode = canvas.node();\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    vm.tooltip(mouseX, mouseY, node[\"x\"], node[\"y\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"y\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BarPlot.vue?vue&type=template&id=466fc126&\"\nimport script from \"./BarPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./BarPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BarPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"BarPlot.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': '6px', \n            'width': '6px',\n            'border-radius': '50%',\n            'top': (this.pMarginTop + this.highlightY1 - 3) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 3) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': '6px', \n                'width': '6px',\n                'border-radius': '50%',\n                'top': (this.pMarginTop + this.highlightY1 - 3) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 3) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse } from 'd3';\nimport { Delaunay } from 'd3-delaunay';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @extends mixin\n * \n * @example\n * <ScatterPlot\n *      data=\"xy_data\"\n *      x=\"x\" \n *      y=\"y\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'ScatterPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        }\n        // TODO: allow optional color variable\n        // TODO: allow optional dot size variable\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: ''\n            },\n            highlightXScale: null,\n            highlightYScale: null,\n            highlightX1: 0,\n            highlightY1: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n\n            // Set position\n            this.tooltipPosition.left = mouseX + this.pMarginLeft;\n            this.tooltipPosition.top = mouseY + this.pMarginTop;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            this.highlightX1 = this.highlightXScale(value);\n            this.showHighlight = true;\n\n        },\n        highlightY(value) {\n            this.highlightY1 = this.highlightYScale(value);\n            this.showHighlight = true;\n        },\n        highlightDestroy() {\n            this.showHighlight = false;\n        },\n        drawPlot() {\n            const vm = this;\n            \n            let data = this._dataContainer.dataCopy;\n            const xScale = this._xScale;\n            const yScale = this._yScale;\n\n\n            const x = d3_scaleLinear()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightXScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            vm.highlightYScale = y;\n            \n            \n            /*\n             * Scale up the canvas\n             */\n            const canvas = d3_select(this.plotSelector);\n            const context = canvas.node().getContext('2d');\n\n            const ratio = getRetinaRatio(context);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvas\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            context.scale(ratio, ratio);\n\n\n            /*\n             * Draw the points\n             */\n            data.forEach((d) => {\n                //context.strokeStyle = cScale.color(d[vm.c]);\n                context.strokeStyle = \"#4682B4\";\n                context.beginPath();\n                context.arc(x(d[vm.x]), y(d[vm.y]), 3, 0, 2*Math.PI);\n                context.stroke();\n            });\n\n            /*\n             * Prepare for interactivity\n             */\n            const points = data.map((d) => [x(d[vm.x]), y(d[vm.y])]);\n            const delaunay = Delaunay.from(points);\n\n            /*\n            // Show the voronoi edges\n            const voronoi = delaunay.voronoi([0, 0, vm.pWidth, vm.pHeight]);\n            context.beginPath();\n            voronoi.render(context);\n            context.stroke();\n            */\n            \n            /*\n             * Listen for mouse events\n             */\n            const canvasNode = canvas.node();\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return data[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    vm.tooltip(mouseX, mouseY, node[vm.x], node[vm.y]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[vm.x], node[vm.y]); \n                    }\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ScatterPlot.vue?vue&type=template&id=24299146&\"\nimport script from \"./ScatterPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./ScatterPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ScatterPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ScatterPlot.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(\"Min\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.min))])]),_c('tr',[_c('th',[_vm._v(\"Q1\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q1))])]),_c('tr',[_c('th',[_vm._v(\"Median\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.median))])]),_c('tr',[_c('th',[_vm._v(\"Mean\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.mean))])]),_c('tr',[_c('th',[_vm._v(\"Q3\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q3))])]),_c('tr',[_c('th',[_vm._v(\"Max\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.max))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>Min</th>\n                    <td>{{ this.tooltipInfo.min }}</td>\n                </tr>\n                <tr>\n                    <th>Q1</th>\n                    <td>{{ this.tooltipInfo.q1 }}</td>\n                </tr>\n                <tr>\n                    <th>Median</th>\n                    <td>{{ this.tooltipInfo.median }}</td>\n                </tr>\n                <tr>\n                    <th>Mean</th>\n                    <td>{{ this.tooltipInfo.mean }}</td>\n                </tr>\n                <tr>\n                    <th>Q3</th>\n                    <td>{{ this.tooltipInfo.q3 }}</td>\n                </tr>\n                <tr>\n                    <th>Max</th>\n                    <td>{{ this.tooltipInfo.max }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleLinear as d3_scaleLinear, scaleQuantile as d3_scaleQuantile } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { min as d3_min, max as d3_max, mean as d3_mean } from 'd3-array';\n\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} y The y-scale variable key.\n * @prop {number} pointSize The diameter of outlier (and mean) points. Default: 6\n * @prop {boolean} drawOutliers Whether or not to draw outlier points on the plot. Default: true\n * @extends mixin\n * \n * @example\n * <BoxPlot\n *      data=\"boxplot_data\"\n *      y=\"exposure\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'BoxPlot',\n    mixins: [mixin],\n    props: {\n        'y': {\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 6\n        },\n        'drawOutliers': {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                min: '',\n                q1: '',\n                median: '',\n                mean: '',\n                q3: '',\n                max: ''\n            }\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, node) {\n            // Set values\n            this.tooltipInfo.min = node.min;\n            this.tooltipInfo.q1 = node.q1;\n            this.tooltipInfo.median = node.median;\n            this.tooltipInfo.mean = node.mean;\n            this.tooltipInfo.q3 = node.q3;\n            this.tooltipInfo.max = node.max;\n\n            // Set position\n            this.tooltipPosition.left = mouseX + this.pMarginLeft;\n            this.tooltipPosition.top = mouseY + this.pMarginTop;\n\n            // Dispatch highlights\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n        },\n        drawPlot() {\n            const vm = this;\n            \n            let data = this._dataContainer.dataCopy;\n            const yScale = this._yScale;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth;\n            \n            /*\n             * Scale up the canvas\n             */\n            const canvas = d3_select(this.plotSelector);\n            const context = canvas.node().getContext('2d');\n\n            const canvasHidden = d3_select(this.hiddenPlotSelector);\n            const contextHidden = canvasHidden.node().getContext('2d');\n\n            const ratio = getRetinaRatio(context);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvas\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            context.scale(ratio, ratio);\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the boxes\n             */\n\n            const boxWidth = (barWidth / 2);\n            const boxMargin = barWidth / 4;\n\n            context.fillStyle = \"#B8CDE3\";\n\n            const diamondSize = vm.pointSize + 2;\n\n            \n            let boxData = data;\n            let quantile = d3_scaleQuantile()\n                .domain(boxData)\n                .range([0, 1, 2, 3]);\n            \n            let quartiles = quantile.quantiles();\n            \n            let q1 = quartiles[0];\n            let median = quartiles[1];\n            let mean = d3_mean(boxData);\n            let q3 = quartiles[2];\n            \n            let iqr = quartiles[2] - quartiles[0];\n            let lowerFence = q1 - iqr;\n            let upperFence = q3 + iqr;\n\n\n            let boxX1 = boxMargin;\n            let boxX2 = boxX1 + boxWidth;\n            let boxX = boxX1 + (boxWidth / 2)\n\n            context.strokeStyle = \"black\";\n            context.beginPath();\n            // Upper Fence\n            context.moveTo(boxX1,y(upperFence));\n            context.lineTo(boxX2,y(upperFence));\n            // Vertical Line\n            context.moveTo(boxX1 + (boxWidth / 2),y(upperFence));\n            context.lineTo(boxX1 + (boxWidth / 2),y(lowerFence));\n            // Lower Fence\n            context.moveTo(boxX1,y(lowerFence));\n            context.lineTo(boxX2,y(lowerFence));\n\n            context.stroke();\n\n            // Draw the box rect\n            context.strokeRect(boxX1, y(q3), boxWidth, y(q1) - y(q3));\n            context.fillRect(boxX1, y(q3), boxWidth, y(q1) - y(q3));\n\n            // Draw the median line\n            context.beginPath();\n            context.moveTo(boxX1, y(median));\n            context.lineTo(boxX2, y(median));\n            context.stroke();\n\n            // Draw the mean diamond\n            context.beginPath();\n            context.moveTo(boxX - (diamondSize/2), y(mean));\n            context.lineTo(boxX, y(mean) - (diamondSize/2));\n            context.lineTo(boxX + (diamondSize/2), y(mean));\n            context.lineTo(boxX, y(mean) + (diamondSize/2));\n            context.lineTo(boxX - (diamondSize/2), y(mean));\n            context.stroke();\n\n            // Draw the outliers\n            if(vm.drawOutliers) {\n                let outliers = boxData.filter((el) => (el > upperFence) || (el < lowerFence));\n                outliers.forEach((outlier) => {\n                    context.beginPath();\n                    context.arc(boxX, y(outlier), (vm.pointSize / 2), 0, 2*Math.PI);\n                    context.stroke();\n                });\n            }\n\n            // Map data to colors\n            const col = genColor();\n            colToNode[col] = {\n                min: d3_min(boxData), \n                q1: q1,\n                median: median,\n                mean: mean,\n                q3: q3, \n                max: d3_max(boxData)\n            };\n            contextHidden.fillStyle = col;\n            contextHidden.fillRect(0, 0, barWidth, vm.pHeight);\n            \n            /*\n             * Listen for mouse events\n             */\n            const canvasNode = canvas.node();\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            }\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    vm.tooltip(mouseX, mouseY, node); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(); \n                    }\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoxPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoxPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BoxPlot.vue?vue&type=template&id=e91efe88&\"\nimport script from \"./BoxPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./BoxPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BoxPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"BoxPlot.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1) + 'px'\n        })}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(\"Min\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.min))])]),_c('tr',[_c('th',[_vm._v(\"Q1\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q1))])]),_c('tr',[_c('th',[_vm._v(\"Median\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.median))])]),_c('tr',[_c('th',[_vm._v(\"Mean\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.mean))])]),_c('tr',[_c('th',[_vm._v(\"Q3\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q3))])]),_c('tr',[_c('th',[_vm._v(\"Max\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.max))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>Min</th>\n                    <td>{{ this.tooltipInfo.min }}</td>\n                </tr>\n                <tr>\n                    <th>Q1</th>\n                    <td>{{ this.tooltipInfo.q1 }}</td>\n                </tr>\n                <tr>\n                    <th>Median</th>\n                    <td>{{ this.tooltipInfo.median }}</td>\n                </tr>\n                <tr>\n                    <th>Mean</th>\n                    <td>{{ this.tooltipInfo.mean }}</td>\n                </tr>\n                <tr>\n                    <th>Q3</th>\n                    <td>{{ this.tooltipInfo.q3 }}</td>\n                </tr>\n                <tr>\n                    <th>Max</th>\n                    <td>{{ this.tooltipInfo.max }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear, scaleQuantile as d3_scaleQuantile } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { min as d3_min, max as d3_max, mean as d3_mean } from 'd3-array';\n\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {number} pointSize The diameter of outlier (and mean) points. Default: 6\n * @prop {boolean} drawOutliers Whether or not to draw outlier points on the plot.\n * @extends mixin\n * \n * @example\n * <MultiBoxPlot\n *      data=\"exposures_data\"\n *      x=\"signature\"\n *      y=\"exposure\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'MultiBoxPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 6\n        },\n        'drawOutliers': {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                min: '',\n                q1: '',\n                median: '',\n                mean: '',\n                q3: '',\n                max: ''\n            },\n            highlightX1: 0,\n            highlightX2: 0,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlight);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, node) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(node.x);\n            this.tooltipInfo.min = node.min;\n            this.tooltipInfo.q1 = node.q1;\n            this.tooltipInfo.median = node.median;\n            this.tooltipInfo.mean = node.mean;\n            this.tooltipInfo.q3 = node.q3;\n            this.tooltipInfo.max = node.max;\n\n            // Set position\n            this.tooltipPosition.left = mouseX + this.pMarginLeft;\n            this.tooltipPosition.top = mouseY + this.pMarginTop;\n\n            // Dispatch highlights\n            this._xScale.emitHighlight(node.x);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n        },\n        highlight(value) {\n            this.highlightX1 = this.highlightScale(value);\n            this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            this.showHighlight = true;\n\n        },\n        highlightDestroy() {\n            this.showHighlight = false;\n        },\n        drawPlot() {\n            const vm = this;\n            \n            let data = this._dataContainer.dataCopy;\n            const xScale = this._xScale;\n            const yScale = this._yScale;\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n              \n            \n\n            \n            /*\n             * Scale up the canvas\n             */\n            const canvas = d3_select(this.plotSelector);\n            const context = canvas.node().getContext('2d');\n\n            const canvasHidden = d3_select(this.hiddenPlotSelector);\n            const contextHidden = canvasHidden.node().getContext('2d');\n\n            const ratio = getRetinaRatio(context);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvas\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            context.scale(ratio, ratio);\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the boxes\n             */\n\n            const boxWidth = (barWidth / 2);\n            const boxMargin = barWidth / 4;\n\n            context.fillStyle = \"#B8CDE3\";\n\n            const diamondSize = vm.pointSize + 2;\n\n            xScale.domainFiltered.forEach((boxVar) => {\n                let boxData = data.map((el) => el[boxVar] || 0);\n                let quantile = d3_scaleQuantile()\n                    .domain(boxData)\n                    .range([0, 1, 2, 3]);\n                \n                let quartiles = quantile.quantiles();\n                \n                let q1 = quartiles[0];\n                let median = quartiles[1];\n                let mean = d3_mean(boxData);\n                let q3 = quartiles[2];\n                \n                let iqr = quartiles[2] - quartiles[0];\n                let lowerFence = q1 - iqr;\n                let upperFence = q3 + iqr;\n\n\n                let boxX1 = x(boxVar) + boxMargin;\n                let boxX2 = boxX1 + boxWidth;\n                let boxX = boxX1 + (boxWidth / 2)\n\n                context.strokeStyle = \"black\";\n                context.beginPath();\n                // Upper Fence\n                context.moveTo(boxX1,y(upperFence));\n                context.lineTo(boxX2,y(upperFence));\n                // Vertical Line\n                context.moveTo(boxX1 + (boxWidth / 2),y(upperFence));\n                context.lineTo(boxX1 + (boxWidth / 2),y(lowerFence));\n                // Lower Fence\n                context.moveTo(boxX1,y(lowerFence));\n                context.lineTo(boxX2,y(lowerFence));\n\n                context.stroke();\n\n                // Draw the box rect\n                context.strokeRect(boxX1, y(q3), boxWidth, y(q1) - y(q3));\n                context.fillRect(boxX1, y(q3), boxWidth, y(q1) - y(q3));\n\n                // Draw the median line\n                context.beginPath();\n                context.moveTo(boxX1, y(median));\n                context.lineTo(boxX2, y(median));\n                context.stroke();\n\n                // Draw the mean diamond\n                context.beginPath();\n                context.moveTo(boxX - (diamondSize/2), y(mean));\n                context.lineTo(boxX, y(mean) - (diamondSize/2));\n                context.lineTo(boxX + (diamondSize/2), y(mean));\n                context.lineTo(boxX, y(mean) + (diamondSize/2));\n                context.lineTo(boxX - (diamondSize/2), y(mean));\n                context.stroke();\n\n                // Draw the outliers\n                if(vm.drawOutliers) {\n                    let outliers = boxData.filter((el) => (el > upperFence) || (el < lowerFence));\n                    outliers.forEach((outlier) => {\n                        context.beginPath();\n                        context.arc(boxX, y(outlier), (vm.pointSize / 2), 0, 2*Math.PI);\n                        context.stroke();\n                    });\n                }\n\n                // Map data to colors\n                const col = genColor();\n                colToNode[col] = {\n                    x: boxVar,\n                    min: d3_min(boxData), \n                    q1: q1,\n                    median: median,\n                    mean: mean,\n                    q3: q3, \n                    max: d3_max(boxData)\n                };\n                contextHidden.fillStyle = col;\n                contextHidden.fillRect(x(boxVar), 0, barWidth, vm.pHeight);\n            });\n            \n            /*\n             * Listen for mouse events\n             */\n            const canvasNode = canvas.node();\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            }\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    vm.tooltip(mouseX, mouseY, node); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"]); \n                    }\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiBoxPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiBoxPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MultiBoxPlot.vue?vue&type=template&id=6e317ab7&\"\nimport script from \"./MultiBoxPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiBoxPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MultiBoxPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"MultiBoxPlot.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1) + 'px'\n        })}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @extends mixin\n * \n * @example\n * <TrackPlot\n *      data=\"clinical_data\"\n *      x=\"sample_id\" \n *      c=\"age\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'TrackPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'c': {\n            type: String\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                c: ''\n            },\n            highlightX1: 0,\n            highlightX2: 0,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlight);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, c) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX + this.pMarginLeft;\n            this.tooltipPosition.top = mouseY + this.pMarginTop;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n        },\n        highlight(value) {\n            this.highlightX1 = this.highlightScale(value);\n            this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            this.showHighlight = true;\n\n        },\n        highlightDestroy() {\n            this.showHighlight = false;\n        },\n        drawPlot() {\n            const vm = this;\n            \n            let data = this._dataContainer.dataCopy;\n            const xScale = this._xScale;\n            const cScale = this._cScale;\n\n            data = data.filter((el) => xScale.domainFiltered.includes(el[vm.x]));\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n              \n            \n            /*\n             * Scale up the canvas\n             */\n            const canvas = d3_select(this.plotSelector);\n            const context = canvas.node().getContext('2d');\n\n            const canvasHidden = d3_select(this.hiddenPlotSelector);\n            const contextHidden = canvasHidden.node().getContext('2d');\n\n            const ratio = getRetinaRatio(context);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvas\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            context.scale(ratio, ratio);\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the track\n             */\n            data.forEach((d) => {\n                const col = genColor();\n                colToNode[col] = { \"x\": d[vm.x], \"c\": d[vm.c] };\n                contextHidden.fillStyle = col;\n\n                context.fillStyle = cScale.color(d[vm.c]);\n                context.fillRect(x(d[vm.x]), 0, barWidth, vm.pHeight);\n                contextHidden.fillRect(x(d[vm.x]), 0, barWidth, vm.pHeight);\n            });\n            \n            /*\n             * Listen for mouse events\n             */\n            const canvasNode = canvas.node();\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    vm.tooltip(mouseX, mouseY, node[\"x\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"c\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrackPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrackPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TrackPlot.vue?vue&type=template&id=eccfcb00&\"\nimport script from \"./TrackPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./TrackPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TrackPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"TrackPlot.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': '6px', \n            'width': '6px',\n            'border-radius': '50%',\n            'top': (this.pMarginTop + this.highlightY1 - 3) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 3) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(\"Chromosome\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.chromosome))])]),_c('tr',[_c('th',[_vm._v(\"Position\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.position))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': '6px', \n                'width': '6px',\n                'border-radius': '50%',\n                'top': (this.pMarginTop + this.highlightY1 - 3) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 3) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>Chromosome</th>\n                    <td>{{ this.tooltipInfo.chromosome }}</td>\n                </tr>\n                <tr>\n                    <th>Position</th>\n                    <td>{{ this.tooltipInfo.position }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse } from 'd3';\nimport { Delaunay } from 'd3-delaunay';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport GenomeScale from './../../scales/GenomeScale.js';\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} g The genome-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @prop {string} chromosomeVariable The axis chromosome variable key. Default: \"chromosome\"\n * @prop {string} positionVariable The axis position variable key. Default: \"position\"\n * @extends mixin\n * \n * @example\n * <GenomeScatterPlot\n *      data=\"rainfall_data\"\n *      g=\"genome\" \n *      y=\"mut_dist\"\n *      c=\"category\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'GenomeScatterPlot',\n    mixins: [mixin],\n    props: {\n        'g': {\n            type: String // genome\n        },\n        'y': {\n            type: String\n        },\n        'c': {\n            type: String // color\n        },\n        'chromosomeVariable': {\n            type: String,\n            default: \"chromosome\"\n        },\n        'positionVariable': {\n            type: String,\n            default: \"position\"\n        }\n        // TODO: allow optional dot size, dot shape variable\n        // TODO: allow specification of filled dots, static dot stroke/fill, etc...\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                chromosome: '',\n                position: '',\n                y: '',\n                c: ''\n            },\n            highlightGScales: null,\n            highlightYScale: null,\n            highlightX1: 0,\n            highlightY1: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._gScale = this.getScale(this.g);\n        this._yScale = this.getScale(this.y);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._gScale instanceof GenomeScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._gScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._gScale.onHighlight(this.uuid, this.highlightG);\n        this._gScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        // TODO: subscribe to color scale highlights??\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, chromosome, position, y, c) {\n            // Set values\n            this.tooltipInfo.chromosome = chromosome;\n            this.tooltipInfo.position = position.toLocaleString();\n\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX + this.pMarginLeft;\n            this.tooltipPosition.top = mouseY + this.pMarginTop;\n            \n            // Dispatch highlights\n            this._gScale.emitHighlight(chromosome, position);\n            this._yScale.emitHighlight(y);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._gScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlightG(chromosome, position) {\n            this.highlightX1 = this.highlightGScales[chromosome](position);\n            this.showHighlight = true;\n        },\n        highlightY(value) {\n            this.highlightY1 = this.highlightYScale(value);\n            this.showHighlight = true;\n        },\n        highlightDestroy() {\n            this.showHighlight = false;\n        },\n        drawPlot() {\n            const vm = this;\n            \n            let data = this._dataContainer.dataCopy;\n            const cScale = this._cScale;\n            const yScale = this._yScale;\n            const gScale = this._gScale;\n\n            let chromosomes = gScale.chromosomesFiltered;\n\n            data = data.filter((d) => chromosomes.includes(d[vm.chromosomeVariable]));\n\n\n            const g = {};\n            \n            let domains = gScale.getDomainsFiltered();\n            let chromosomeRatios = gScale.getChromosomeRatiosFiltered();\n            let chromosomeRatiosCumulative = gScale.getChromosomeRatiosCumulativeFiltered();\n\n            for(let i = 0; i < chromosomeRatios.length; i++) {\n                let currChromosome = chromosomes[i];\n                let currDomain = domains[i];\n                let currRatio = chromosomeRatios[i];\n                let currRatioCumulative = chromosomeRatiosCumulative[i];\n                g[currChromosome] = d3_scaleLinear()\n                    .domain(currDomain)\n                    .range([vm.pWidth * currRatioCumulative, vm.pWidth * (currRatioCumulative + currRatio)]);\n            }\n\n            vm.highlightGScales = g;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            // TODO: figure out option for scale log\n\n            vm.highlightYScale = y;\n            \n            \n            /*\n             * Scale up the canvas\n             */\n            const canvas = d3_select(this.plotSelector);\n            const context = canvas.node().getContext('2d');\n\n            const ratio = getRetinaRatio(context);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvas\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            context.scale(ratio, ratio);\n\n            if(data.length === 0) {\n                canvas.on(\"mousemove\", () => {});\n                canvas.on(\"mouseleave\", () => {});\n                return;\n            }\n\n\n            /*\n             * Draw the points\n             */\n            data.forEach((d) => {\n                context.fillStyle = cScale.color(d[vm.c]);\n                context.beginPath();\n                context.arc(g[d[vm.chromosomeVariable]](d[vm.positionVariable]), y(d[vm.y]), 3, 0, 2*Math.PI);\n                context.fill();\n            });\n\n\n\n            /*\n             * Prepare for interactivity\n             */\n            const points = data.map((d) => [g[d[vm.chromosomeVariable]](d[vm.positionVariable]), y(d[vm.y])]);\n            const delaunay = Delaunay.from(points);\n\n            /*\n            // Show the voronoi edges\n            const voronoi = delaunay.voronoi([0, 0, vm.pWidth, vm.pHeight]);\n            context.beginPath();\n            voronoi.render(context);\n            context.stroke();\n            */\n            \n            /*\n             * Listen for mouse events\n             */\n            const canvasNode = canvas.node();\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return data[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    vm.tooltip(mouseX, mouseY, node[vm.chromosomeVariable], node[vm.positionVariable], node[vm.y], node[vm.c]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[vm.chromosomeVariable], node[vm.positionVariable], node[vm.y], node[vm.c]); \n                    }\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeScatterPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeScatterPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GenomeScatterPlot.vue?vue&type=template&id=0a647521&\"\nimport script from \"./GenomeScatterPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./GenomeScatterPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GenomeScatterPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"GenomeScatterPlot.vue\"\nexport default component.exports","import PlotContainer from './components/PlotContainer.vue';\nimport Axis from './components/Axis.vue';\nimport GenomeAxis from './components/GenomeAxis.vue';\nimport DendrogramAxis from './components/DendrogramAxis.vue';\n\n// Plots\nimport StackedBarPlot from './components/plots/StackedBarPlot.vue';\nimport BarPlot from './components/plots/BarPlot.vue';\nimport ScatterPlot from './components/plots/ScatterPlot.vue';\nimport BoxPlot from './components/plots/BoxPlot.vue';\nimport MultiBoxPlot from './components/plots/MultiBoxPlot.vue';\nimport TrackPlot from './components/plots/TrackPlot.vue';\n// Genome Plots\nimport GenomeScatterPlot from './components/plots/GenomeScatterPlot.vue';\n\n\n\n/* eslint-disable no-undef */\nif (typeof window !== 'undefined' && window.Vue) {\n    Vue.component(PlotContainer.name, PlotContainer);\n    Vue.component(Axis.name, Axis);\n    Vue.component(GenomeAxis.name, GenomeAxis);\n    Vue.component(DendrogramAxis.name, DendrogramAxis);\n    // Plots\n    Vue.component(StackedBarPlot.name, StackedBarPlot);\n    Vue.component(BarPlot.name, BarPlot);\n    Vue.component(ScatterPlot.name, ScatterPlot);\n    Vue.component(BoxPlot.name, BoxPlot);\n    Vue.component(MultiBoxPlot.name, MultiBoxPlot);\n    Vue.component(TrackPlot.name, TrackPlot);\n    // Plots\n    Vue.component(GenomeScatterPlot.name, GenomeScatterPlot);\n}\n\nexport {\n    PlotContainer,\n    Axis,\n    GenomeAxis,\n    DendrogramAxis,\n    StackedBarPlot,\n    BarPlot,\n    ScatterPlot,\n    BoxPlot,\n    MultiBoxPlot,\n    TrackPlot,\n    GenomeScatterPlot\n}","import { descending as d3_descending, ascending as d3_ascending } from \"d3-array\";\nimport { scaleOrdinal as d3_scaleOrdinal } from 'd3-scale';\nimport AbstractScale from './AbstractScale.js';\n\n/**\n * Scale class for categorical variables.\n */\nexport default class CategoricalScale extends AbstractScale {\n\n    /**\n     * Create a categorical scale.\n     * @param {string} id The ID for the scale.\n     * @param {string} name The name for the scale.\n     * @param {array} domain The domain for the scale.\n     * @param {array} humanDomain The humanDomain for the scale.\n     */\n    constructor(id, name, domain, humanDomain) {\n        super(id, name, domain);\n        if(Array.isArray(humanDomain) && domain.length === humanDomain.length) {\n            this._humanDomain = humanDomain;\n        } else {\n            this._humanDomain = domain;\n        }\n    }\n\n    /** @inheritdoc */\n    get type() {\n        return AbstractScale.types.DISCRETE;\n    }\n    /**\n     * Human-readable domain values\n     * - Example domain:        [0, 1, 2]\n     * - Example humanDomain:   [\"string0\", \"string1\", \"string2\"]\n     * @returns {array} The human-readable domain values\n     */\n    get humanDomain() {\n        // implementation example:\n        // return [\"string0\", \"string1\", \"string2\"];\n        return this._humanDomain;\n    }\n    \n    /**\n     * @returns {function} Function that converts domain value -> humanDomain value\n     */\n    get humanScale() {\n        return d3_scaleOrdinal()\n            .domain(this.domain)\n            .range(this.humanDomain);\n    }\n\n    /** @inheritdoc */\n    toHuman(domainValue) {\n        if(AbstractScale.isUnknown(domainValue)) {\n            return AbstractScale.unknownString;\n        }\n        return this.humanScale(domainValue);\n    }\n\n    /** @inheritdoc */\n    color(domainValue) {\n        if(AbstractScale.isUnknown(domainValue)) {\n            return AbstractScale.unknownColor;\n        }\n        return this.colorScale(this.domain.findIndex((el) => (el === domainValue)) / parseFloat(this.domain.length - 1));\n    }\n\n    /** @inheritdoc */\n    comparator(a, b) {\n        return d3_descending(\n            (a == \"nan\" ? -1 : this.domain.indexOf(a)), \n            (b == \"nan\" ? -1 : this.domain.indexOf(b))\n        );\n    }\n\n    /**\n     * Zooms the scale.\n     * @param {number} newMinIndex Index of the new minimum element (inclusive)\n     * @param {number} newMaxIndex Index of the new maximum element (exclusive)\n     */\n    zoom(newMinIndex, newMaxIndex) {\n        let elementsFiltered = this._domain.slice(newMinIndex, newMaxIndex);\n        this.setDomainFiltered(elementsFiltered);\n        this.emitUpdate();\n    }\n\n    /**\n     * Filters the scale.\n     * @param {array} indicesToKeep Array of indices of elements to include.\n     */\n    filter(indicesToKeep) {\n        let elementsFiltered = indicesToKeep.map(index => this._domain[index]);\n        this.setDomainFiltered(elementsFiltered);\n        this.emitUpdate();\n    }\n\n    /**\n     * Sort the data based on the variables passed in.\n     * @param {object} dataContainer DataContainer instance holding the data used to sort.\n     * @param {string} var1D\n     * @param {boolean} ascending Whether to sort ascending or descending.\n     */\n    sort(dataContainer, var1D, ascending=true) {\n        // TODO: use d3_descending/ascending\n        let comparator;\n        let compareFunc = d3_ascending;\n        if(!ascending) {\n            compareFunc = d3_descending;\n        }\n                \n        comparator = (a, b) => compareFunc(\n            (a[var1D] == \"nan\" ? -1 : +a[var1D]), \n            (b[var1D] == \"nan\" ? -1 : +b[var1D])\n        );\n        \n        // TODO: Sort the data using the comparator, doing something like this\n        let data = dataContainer.dataCopy;\n        console.assert(data instanceof Array);\n        data = data.sort(comparator);\n        // Use map to get array of this.id, filter using those indices\n        // Set overall domain\n        let elementsSorted = data.map((el) => el[this.id]);\n        this.setDomain(elementsSorted);\n\n        // Set filtered domain\n        let elementsSortedFiltered = elementsSorted.filter((el) => this._domainFiltered.includes(el));\n        this.setDomainFiltered(elementsSortedFiltered);\n\n        this.emitUpdate();\n    }\n    \n\n}","import { interpolateYlOrRd as d3_interpolateYlOrRd } from 'd3-scale-chromatic';\nimport { descending as d3_descending } from 'd3-array';\nimport AbstractScale from './AbstractScale.js';\n\n/**\n * Scale class for continuous variables.\n */\nexport default class ContinuousScale extends AbstractScale {\n\n    /** @inheritdoc */\n    get type() {\n        return AbstractScale.types.CONTINUOUS;\n    }\n\n    /** @inheritdoc */\n    get colorScale() {\n        return d3_interpolateYlOrRd;\n    }\n\n    /** @inheritdoc */\n    color(domainValue) {\n        if(AbstractScale.isUnknown(domainValue)) {\n            return AbstractScale.unknownColor;\n        }\n        return this.colorScale((domainValue - this.domain[0]) / parseFloat(this.domain[1] - this.domain[0]));\n    }\n\n    /** @inheritdoc */\n    comparator(a, b) {\n        return d3_descending(\n            (a == \"nan\" ? -1 : +a), \n            (b == \"nan\" ? -1 : +b)\n        );\n    }\n\n    /**\n     * Zooms the scale.\n     * @param {number} newMin New minimum domain element value.\n     * @param {number} newMax New maximum domain element value.\n     */\n    zoom(newMin, newMax) {\n        this._domainFiltered = [newMin, newMax];\n        this.emitUpdate();\n    }\n\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n    Sort \"),_c('em',[_vm._v(_vm._s(_vm.getScale(_vm.variable).name))]),_vm._v(\" by \"),_c('em',[_vm._v(_vm._s(_vm.getData(_vm.by.data).name))]),_vm._v(\" data\\n    \"),_c('span',[_vm._v(\"\\n        on\\n        \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedKey),expression:\"selectedKey\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedKey=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"Please select one\")]),_vm._l((_vm.by.variables),function(sortVarKey){return _c('option',{key:sortVarKey,domProps:{\"value\":sortVarKey}},[_vm._v(\"\\n                \"+_vm._s(sortVarKey)+\"\\n            \")])})],2)]),(_vm.validSelection(_vm.selectedKey))?_c('span',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sortAscending),expression:\"sortAscending\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.sortAscending=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{domProps:{\"value\":true}},[_vm._v(\"Ascending\")]),_c('option',{domProps:{\"value\":false}},[_vm._v(\"Descending\")])])]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n/**\n * Represents options that specify how to sort a dataset.\n */\nexport default class SortBy {\n    /**\n     * Create a SortBy object (can be passed to SortOptions component by= prop).\n     * @param {string} data The key for the data.\n     * @param {array} variables An array of variable key strings.\n     */\n    constructor(data, variables) {\n        this._data = data;\n        this._variables = variables;\n    }\n\n    /**\n     * @returns The key for the data.\n     */\n    get data() {\n        return this._data;\n    }\n\n    /**\n     * @returns The array of variable key strings.\n     */\n    get variables() {\n        return this._variables;\n    }\n}","<template>\n    <div>\n        Sort <em>{{ getScale(variable).name }}</em> by <em>{{ getData(by.data).name }}</em> data\n        <span>\n            on\n            <select v-model=\"selectedKey\">\n                <option disabled value=\"\">Please select one</option>\n                <option v-for=\"sortVarKey in by.variables\" :key=\"sortVarKey\" :value=\"sortVarKey\">\n                    {{ sortVarKey }}\n                </option>\n            </select>\n        </span>\n\n        <span v-if=\"validSelection(selectedKey)\">\n            <select v-model=\"sortAscending\">\n                <option :value=\"true\">Ascending</option>\n                <option :value=\"false\">Descending</option>\n            </select>\n        </span>\n        \n    </div>\n</template>\n\n<script>\nimport SortBy from './../sort/SortBy.js';\n\nlet uuid = 0;\nexport default {\n    name: 'SortOptions',\n    props: {\n        'variable': {\n            type: String\n        },\n        'by': {\n            type: Object \n        },\n        'getScale': {\n            type: Function\n        },\n        'getData': {\n            type: Function\n        }\n    },\n    data() {\n        return {\n            selectedKey: null,\n            sortAscending: true\n        }\n    },\n    watch: {\n        selectedKey: function() {\n            this.go();\n        },\n        sortAscending: function() {\n            this.go();\n        }\n    },\n    created() {\n        console.assert(this.by instanceof SortBy);\n        // TODO: Make assertions about scale types?\n    },\n    methods: {\n        validSelection(varValue) {\n            return (varValue !== null);\n        },\n        go() {\n            if(this.validSelection(this.selectedKey)) {\n                this.getScale(this.variable).sort(this.getData(this.by.data), this.selectedKey, this.sortAscending);\n            }\n        }\n    }\n}\n</script>\n\n<style>\n\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SortOptions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SortOptions.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SortOptions.vue?vue&type=template&id=17377c1a&\"\nimport script from \"./SortOptions.vue?vue&type=script&lang=js&\"\nexport * from \"./SortOptions.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SortOptions.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"SortOptions.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('button',{attrs:{\"disabled\":!_vm.stack.canGoBack()},on:{\"click\":function($event){_vm.stack.goBack()}}},[_vm._v(\"Back\")]),_c('button',{attrs:{\"disabled\":!_vm.stack.canGoForward()},on:{\"click\":function($event){_vm.stack.goForward()}}},[_vm._v(\"Forward\")]),_c('div',{staticClass:\"stack-elements\"},_vm._l((_vm.elementsReversed),function(el,index){return _c('div',{key:index},[(_vm.isCurrent(index))?_c('span',{staticClass:\"pointer\"},[_vm._v(\">\")]):_vm._e(),_vm._v(\"\\n          \"+_vm._s(el.toJson())+\"\\n      \")])}))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n      <button @click=\"stack.goBack()\" :disabled=\"!stack.canGoBack()\">Back</button>\n      <button @click=\"stack.goForward()\" :disabled=\"!stack.canGoForward()\">Forward</button>\n      <div class=\"stack-elements\">\n        <div v-for=\"(el, index) in elementsReversed\" :key=\"index\">\n            <span v-if=\"isCurrent(index)\" class=\"pointer\">&gt;</span>\n            {{ el.toJson() }}\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'Stack',\n  props: ['getStack'],\n  data() {\n      return {\n          elements: this.getStack()._stack,\n          stack: this.getStack()\n      }\n  },\n  computed: {\n      elementsReversed() {\n          return this.elements.slice().reverse();\n      }\n  },\n  methods: {\n      isCurrent(index) {\n          return (this.stack._pointer == (this.elements.length - 1 - index));\n      }\n  }\n}\n</script>\n\n<style>\n.pointer {\n    color: red;\n}\n.stack-elements {\n    position: absolute;\n    bottom: 0;\n    width: 400px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stack.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stack.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Stack.vue?vue&type=template&id=6da5bdb9&\"\nimport script from \"./Stack.vue?vue&type=script&lang=js&\"\nexport * from \"./Stack.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Stack.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Stack.vue\"\nexport default component.exports","import HistoryEvent from './HistoryEvent.js';\n\n/**\n * Represents a history of all application interaction events,\n * which can be used for forward(redo)/backward(undo) navigation.\n */\nexport default class HistoryStack {\n\n    /**\n     * Create a new history stack.\n     * @param {function} getScale Function that returns a scale object for a provided string key.\n     */\n    constructor(getScale) {\n        this._getScale = getScale;\n        this._initial = []; // initial stack\n        this._stack = []; // user-event stack\n        this._pointer = undefined; // user-event stack pointer\n    }\n\n    /**\n     * Push an event onto the stack.\n     * @param {HistoryEvent} event The event to push.\n     * @param {boolean} initial Whether this event is an initialization event.\n     */\n    push(event, initial) {\n        if(initial === undefined || initial === false) {\n            if(this.canGoForward()) {\n                this.prune();\n            }\n            this._stack.push(event);\n            this.incrementPointer();\n        } else {\n            this._initial.push(event);\n        }\n    }\n\n    /**\n     * Pop an event from the top of the stack.\n     * @returns {HistoryStack} The last event.\n     */\n    pop() {\n        this.decrementPointer();\n        return this._stack.pop();\n    }\n\n    /**\n     * Prune the stack, \n     * removing any events \"above\" the current pointer\n     */\n    prune() {\n        if(this._pointer === undefined) {\n            // clear the stack\n            while(this._stack.length) {\n                this._stack.pop();\n            }\n        } else {\n            // remove all events above the pointer\n            while(this._pointer < (this._stack.length-1)) {\n                this._stack.pop();\n            }\n        }\n    }\n\n    /**\n     * Find the most recent \"related\" event. \n     * Dips into the \"initial\" events if needed.\n     * @param {HistoryEvent} event The event to reference.\n     * @returns {HistoryEvent} A \"related\", but previous event.\n     */\n    getPrevRelated(event, pointer) {\n        for(let i = pointer - 1; i >= 0; i--) {\n            if(this._stack[i].isRelated(event)) {\n                return this._stack[i];\n            }\n        }\n        return this._initial.find((el) => event.isRelated(el));\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    canGoBack() {\n        return (this._pointer !== undefined);\n    }\n\n    /**\n     * Goes back by executing the most recent \"related\" event,\n     * in relation to the currently-pointed-to event.\n     * Decrements the stack pointer.\n     */\n    goBack() {\n        if(this.canGoBack()) {\n            // get the current event\n            let curr = this._stack[this._pointer];\n            // get the most recent \"related\" event\n            let prev = this.getPrevRelated(curr, this._pointer);\n            this.decrementPointer();\n            \n            // Execute \"prev\" event\n            this.execute(prev);\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    canGoForward() {\n        return (!this.isEmpty() && (this._pointer < (this._stack.length - 1) || this._pointer === undefined));\n    }\n\n    /**\n     * Goes forward by executing the next event.\n     * Increments the stack pointer.\n     */\n    goForward() {\n        if(this.canGoForward()) {\n            // get the next event\n            this.incrementPointer();\n            let next = this._stack[this._pointer];\n            \n            // Execute \"next\" event\n            this.execute(next);\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isEmpty() {\n        return (this._stack.length === 0);\n    }\n\n    /**\n     * Decrements the stack pointer, or sets to undefined.\n     */\n    decrementPointer() {\n        this._pointer = (this._pointer === 0 ? undefined : this._pointer - 1);\n    }\n\n    /**\n     * Increments the stack pointer, or sets to zero.\n     */\n    incrementPointer() {\n        this._pointer = (this._pointer === undefined ? 0 : this._pointer + 1);\n    }\n\n    /**\n     * Execute a provided event.\n     * @param {HistoryEvent} event \n     */\n    execute(event) {\n\n        if(event === undefined) {\n            console.error(\"Error: the event passed to HistoryStack.execute is undefined\");\n            return;\n        }\n\n        let getTargetFunc;\n\n        switch(event.type) {\n            case HistoryEvent.types.SCALE:\n                getTargetFunc = this._getScale;\n                break;\n            default:\n                getTargetFunc = undefined;\n        }\n\n        if(getTargetFunc !== undefined) {\n            let target = getTargetFunc(event.id);\n            /*\n            TODO: parse event.params to search for symbols?\n                For example, if one wanted to use a specific dataset as a param, \n                could encode as the string \"{data:myDatasetKey}\" or something...\n            */\n            target[event.action]( ...event.params );\n        } else {\n            console.error(\"Error: the target function specified by the HistoryEvent type is undefined\");\n        }\n    }\n\n}","<template>\n  <div id=\"app\">\n    <h1>vue-declarative-plots</h1>\n    <a href=\"https://github.com/keller-mark/vue-declarative-plots\" title=\"View on GitHub\">\n      <svg id=\"github\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/></svg>\n    </a>\n\n    <button @click=\"showStack = !showStack\" :style=\"{display: 'block'}\">Toggle Stack</button>\n\n    <h3>&lt;StackedBarPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"800\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"150\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <StackedBarPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        x=\"sample_id\" \n        y=\"exposure\"\n        c=\"signature\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sample_id\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;BarPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"150\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <BarPlot\n        slot=\"plot\"\n        data=\"exposures_single_data\"\n        x=\"signature\" \n        y=\"exposure\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"signature\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n        :disableBrushing=\"true\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;ScatterPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"150\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"y\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <ScatterPlot\n        slot=\"plot\"\n        data=\"xy_data\"\n        x=\"x\"\n        y=\"y\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"x\"\n        side=\"bottom\" \n        :tickRotation=\"0\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;BoxPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"200\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <BoxPlot\n        slot=\"plot\"\n        data=\"boxplot_data\"\n        y=\"exposure\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :drawOutliers=\"true\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;MultiBoxPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <MultiBoxPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        x=\"signature\"\n        y=\"exposure\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :drawOutliers=\"true\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"signature\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;TrackPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"40\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n    >\n      <TrackPlot\n        slot=\"plot\"\n        data=\"clinical_data\"\n        x=\"sample_id\"\n        c=\"age\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sample_id\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;GenomeAxis/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"800\"\n      :pHeight=\"10\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"20\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"80\"\n    >\n      <GenomeAxis\n        slot=\"axisBottom\"\n        scaleKey=\"genome\"\n        side=\"bottom\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;GenomeScatterPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"800\"\n      :pHeight=\"500\"\n      :pMarginTop=\"20\"\n      :pMarginLeft=\"150\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"80\"\n    > \n      <Axis\n        slot=\"axisLeft\"\n        variable=\"mut_dist\"\n        side=\"left\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <GenomeScatterPlot\n        slot=\"plot\"\n        data=\"rainfall_data\"\n        g=\"genome\"\n        chromosomeVariable=\"chr\"\n        positionVariable=\"pos\"\n        c=\"cat\"\n        y=\"mut_dist\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <GenomeAxis\n        slot=\"axisBottom\"\n        scaleKey=\"genome\"\n        side=\"bottom\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;DendrogramAxis/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"900\"\n      :pHeight=\"10\"\n      :pMarginTop=\"200\"\n      :pMarginLeft=\"20\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"20\"\n    >\n      <DendrogramAxis\n        slot=\"axisTop\"\n        data=\"clustering\"\n        variable=\"sample_id\"\n        side=\"top\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n        :getData=\"getData\"\n      />\n    </PlotContainer>\n\n\n    <h3>&lt;SortOptions/&gt;</h3>\n    <SortOptions \n      variable=\"sample_id\" \n      :by=\"sampleSortBy\" \n      :getScale=\"getScale\" \n      :getData=\"getData\"\n    />\n\n\n    <div class=\"stack-wrapper\" v-show=\"showStack\">\n      <h3>&lt;Stack/&gt;</h3>\n      <Stack :getStack=\"getStack\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { set as d3_set } from 'd3-collection';\n// Plots\nimport { PlotContainer, Axis, GenomeAxis, DendrogramAxis } from '../src/index.js';\nimport { StackedBarPlot, BarPlot, ScatterPlot, BoxPlot, MultiBoxPlot, TrackPlot } from '../src/index.js';\nimport { GenomeScatterPlot } from '../src/index.js';\n\n\n// Data\nimport DataContainer from '../src/data/DataContainer.js';\n\nimport exposuresData from './data/exposures.json';\nimport exposuresSingleData from './data/exposures_single.json';\nimport rainfallData from './data/rainfall.json';\nimport xyData from './data/xy.json';\nimport boxplotData from './data/boxplot_data.json';\nimport clinicalData from './data/clinical_data.json';\nimport clusteringData from './data/clustering.json';\n\n\n// Scales\nimport CategoricalScale from '../src/scales/CategoricalScale.js';\nimport ContinuousScale from '../src/scales/ContinuousScale.js';\nimport GenomeScale from '../src/scales/GenomeScale.js';\n\n// Sort\nimport SortOptions from '../src/components/SortOptions.vue';\n\nimport SortBy from '../src/sort/SortBy.js';\n\n// History\nimport Stack from './Stack.vue';\nimport HistoryStack from './../src/history/HistoryStack.js';\nimport HistoryEvent from './../src/history/HistoryEvent.js';\n\nconst exposuresDataContainer = new DataContainer(\n  'exposures_data', \n  'SBS Exposures', \n  exposuresData\n);\nconst exposuresSingleDataContainer = new DataContainer(\n  'exposures_single_data', \n  'SBS Exposures for SA542425', \n  exposuresSingleData\n);\nconst rainfallDataContainer = new DataContainer(\n  'rainfall_data', \n  'Rainfall for SA543567', \n  rainfallData\n);\nconst xyDataContainer = new DataContainer(\n  'xy_data',\n  'Random Data',\n  xyData\n);\nconst boxplotDataContainer = new DataContainer(\n  'boxplot_data',\n  'COSMIC 1 Exposures',\n  boxplotData\n);\nconst clinicalDataContainer = new DataContainer(\n  'clinical_data',\n  'Clinical Data',\n  clinicalData\n);\nconst clusteringDataContainer = new DataContainer(\n  'clustering',\n  'Samples clustered by Exposure',\n  clusteringData\n);\n\n\n// Initialize data\nconst getData = function(dataKey) {\n  switch(dataKey) {\n    case 'exposures_data':\n      return exposuresDataContainer;\n    case 'exposures_single_data':\n      return exposuresSingleDataContainer;\n    case 'rainfall_data':\n      return rainfallDataContainer;\n    case 'xy_data':\n      return xyDataContainer;\n    case 'boxplot_data':\n      return boxplotDataContainer;\n    case 'clinical_data':\n      return clinicalDataContainer;\n    case 'clustering':\n      return clusteringDataContainer;\n  }\n};\n\n\n// Initialize scales\nconst sampleIdScale = new CategoricalScale(\n  'sample_id', \n  'Sample', \n  d3_set(exposuresData.map(el => el.sample_id)).values()\n);\nconst exposureScale = new ContinuousScale(\n  'exposure',\n  'Exposure',\n  [0, 90000]\n);\nconst signatureScale = new CategoricalScale(\n  'signature',\n  'Signature',\n  [\"COSMIC 1\",\"COSMIC 2\",\"COSMIC 3\",\"COSMIC 4\",\"COSMIC 5\",\"COSMIC 6\",\"COSMIC 7\",\"COSMIC 8\",\"COSMIC 9\",\"COSMIC 10\",\"COSMIC 11\",\"COSMIC 12\",\"COSMIC 13\",\"COSMIC 14\",\"COSMIC 15\",\"COSMIC 16\",\"COSMIC 17\",\"COSMIC 18\",\"COSMIC 19\",\"COSMIC 20\",\"COSMIC 21\",\"COSMIC 22\",\"COSMIC 23\",\"COSMIC 24\",\"COSMIC 25\",\"COSMIC 26\",\"COSMIC 27\",\"COSMIC 28\",\"COSMIC 29\",\"COSMIC 30\",\"5* A\"]\n);\nconst xyYScale = new ContinuousScale(\n  'y',\n  'Random Y',\n  [0, 100]\n);\nconst xyXScale = new ContinuousScale(\n  'x',\n  'Random X',\n  [0, 50]\n);\nconst ageScale = new ContinuousScale(\n  'age',\n  'Age',\n  [0, 100]\n);\nconst genomeScale = new GenomeScale(\"genome\", \"Genome\");\nconst SBS_96_CATEGORIES = [\n    'A[C>A]A', 'A[C>A]C', 'A[C>A]G', 'A[C>A]T', \n    'C[C>A]A', 'C[C>A]C', 'C[C>A]G', 'C[C>A]T', \n    'G[C>A]A', 'G[C>A]C', 'G[C>A]G', 'G[C>A]T', \n    'T[C>A]A', 'T[C>A]C', 'T[C>A]G', 'T[C>A]T', \n    \n    'A[C>G]A', 'A[C>G]C', 'A[C>G]G', 'A[C>G]T', \n    'C[C>G]A', 'C[C>G]C', 'C[C>G]G', 'C[C>G]T', \n    'G[C>G]A', 'G[C>G]C', 'G[C>G]G', 'G[C>G]T', \n    'T[C>G]A', 'T[C>G]C', 'T[C>G]G', 'T[C>G]T', \n    \n    'A[C>T]A', 'A[C>T]C', 'A[C>T]G', 'A[C>T]T', \n    'C[C>T]A', 'C[C>T]C', 'C[C>T]G', 'C[C>T]T',\n    'G[C>T]A', 'G[C>T]C', 'G[C>T]G', 'G[C>T]T', \n    'T[C>T]A', 'T[C>T]C', 'T[C>T]G', 'T[C>T]T',  \n    \n    'A[T>A]A', 'A[T>A]C', 'A[T>A]G', 'A[T>A]T', \n    'C[T>A]A', 'C[T>A]C', 'C[T>A]G', 'C[T>A]T', \n    'G[T>A]A', 'G[T>A]C', 'G[T>A]G', 'G[T>A]T',\n    'T[T>A]A', 'T[T>A]C', 'T[T>A]G', 'T[T>A]T', \n    \n    'A[T>C]A', 'A[T>C]C', 'A[T>C]G', 'A[T>C]T', \n    'C[T>C]A', 'C[T>C]C', 'C[T>C]G', 'C[T>C]T', \n    'G[T>C]A', 'G[T>C]C', 'G[T>C]G', 'G[T>C]T', \n    'T[T>C]A', 'T[T>C]C', 'T[T>C]G', 'T[T>C]T', \n    \n    'A[T>G]A', 'A[T>G]C', 'A[T>G]G', 'A[T>G]T', \n    'C[T>G]A', 'C[T>G]C', 'C[T>G]G', 'C[T>G]T', \n    'G[T>G]A', 'G[T>G]C', 'G[T>G]G', 'G[T>G]T', \n    'T[T>G]A', 'T[T>G]C', 'T[T>G]G', 'T[T>G]T'\n];\nconst catScale = new CategoricalScale(\n  'cat',\n  'Mutation Category',\n  SBS_96_CATEGORIES\n);\nconst mutDistScale = new ContinuousScale(\n  'mut_dist',\n  'Distance to Previous Mutation',\n  [0, 6000000]\n);\n\n\nconst getScale = function(scaleKey) {\n  switch(scaleKey) {\n    case 'sample_id':\n      return sampleIdScale;\n    case 'exposure':\n      return exposureScale;\n    case 'signature':\n      return signatureScale;\n    case 'y':\n      return xyYScale;\n    case 'x':\n      return xyXScale;\n    case 'age':\n      return ageScale;\n    case 'genome':\n      return genomeScale;\n    case 'cat':\n      return catScale;\n    case 'mut_dist':\n      return mutDistScale;\n  }\n};\n\n\n// Initialize the stack\nconst stack = new HistoryStack(getScale);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"sample_id\", \"reset\"), true);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"exposure\", \"reset\"), true);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"signature\", \"reset\"), true);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"y\", \"reset\"), true);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"x\", \"reset\"), true);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"age\", \"reset\"), true);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"genome\", \"reset\"), true);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"cat\", \"reset\"), true);\nstack.push(new HistoryEvent(HistoryEvent.types.SCALE, \"mut_dist\", \"reset\"), true);\n\n\n\nconst getStack = function() {\n  return stack;\n}\n\nconst sampleSortBy = new SortBy(\n  \"exposures_data\", \n  signatureScale.domain\n);\n\n\n\nexport default {\n  name: 'app',\n  components: {\n    PlotContainer,\n    Axis,\n    DendrogramAxis,\n    GenomeAxis,\n    StackedBarPlot,\n    BarPlot,\n    SortOptions,\n    Stack,\n    ScatterPlot,\n    BoxPlot,\n    MultiBoxPlot,\n    TrackPlot,\n    GenomeScatterPlot\n  },\n  data() {\n    return {\n      getData: getData,\n      getScale: getScale,\n      sampleSortBy: sampleSortBy,\n      getStack: getStack,\n      showStack: false\n    }\n  },\n  created() {\n    \n  },\n  methods: {\n    exampleClickHandler() {\n      alert(\"You clicked something with data: \" + JSON.stringify([...arguments]));\n    }\n  }\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css?family=IBM+Plex+Mono');\n\n#app {\n  font-family: Avenir,Helvetica,Arial,sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin: 1em;\n  position: relative;\n}\npre {\n  font-family: 'IBM Plex Mono', monospace;\n  background-color: #DDD;\n  padding: 1em;\n}\nh1 {\n  display: inline-block;\n}\na {\n  color: black;\n  text-decoration: none;\n}\n#github {\n  float: right;\n  top: 10px;\n  display: inline-block;\n  position: relative;\n}\n\n.clearfix {\n  float: none;\n  clear: both;\n}\n\n.plot-group {\n  position: relative;\n}\n\n.stack-wrapper {\n  float: right;\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 400px;\n  background-color: lightsteelblue;\n  padding: 0.5rem;\n  height: 90vh;\n  \n}\n\n.stack-wrapper h3 {\n  margin: 5px auto;\n}\n\n.stack-wrapper > div > div > div {\n  overflow-x: scroll;\n  white-space: nowrap;\n  border-left: 3px solid dimgray;\n  padding: 3px;\n  margin-bottom: 5px;\n}\n\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=59520b02&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nconst app = new Vue({\n  el: '#app',\n  render: h => h(App)\n})\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DendrogramAxis.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DendrogramAxis.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeScatterPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeScatterPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stack.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stack.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}